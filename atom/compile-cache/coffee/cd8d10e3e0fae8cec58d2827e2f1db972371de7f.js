(function() {
  var $, Disposable, ExampleSection, ScrollView, StyleguideView, ref,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Disposable = require('atom').Disposable;

  ref = require('atom-space-pen-views'), $ = ref.$, ScrollView = ref.ScrollView;

  require('./space-pen-extensions');

  ExampleSection = require('./example-section');

  module.exports = StyleguideView = (function(superClass) {
    extend(StyleguideView, superClass);

    function StyleguideView() {
      return StyleguideView.__super__.constructor.apply(this, arguments);
    }

    StyleguideView.content = function() {
      return this.div({
        "class": 'styleguide pane-item native-key-bindings',
        tabindex: -1
      }, (function(_this) {
        return function() {
          _this.header({
            "class": 'styleguide-header'
          }, function() {
            _this.h1('Styleguide');
            _this.p('This exercises all UI components and acts as a styleguide.');
            return _this.div({
              "class": 'styleguide-controls btn-group'
            }, function() {
              _this.button({
                outlet: 'collapseAllButton',
                "class": 'btn'
              }, 'Collapse All');
              return _this.button({
                outlet: 'expandAllButton',
                "class": 'btn'
              }, 'Expand All');
            });
          });
          return _this.main({
            outlet: 'styleguideSections',
            "class": 'styleguide-sections'
          }, function() {
            _this.exampleSection('variables', 'Variables', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('Use these UI variables in your package\'s stylesheets. They are set by UI themes and therefore your package will match the overall look. Make sure to @import \'ui-variables\' in your stylesheets to use these variables.');
                };
              })(this));
              this.h2('Text colors');
              this.exampleHtml('<div class="is-color text-color">@text-color</div>\n<div class="is-color text-color-subtle">@text-color-subtle</div>\n<div class="is-color text-color-highlight">@text-color-highlight</div>\n<div class="is-color text-color-selected">@text-color-selected</div>\n<div class="is-color"></div>\n<div class="is-color text-color-info">@text-color-info</div>\n<div class="is-color text-color-success">@text-color-success</div>\n<div class="is-color text-color-warning">@text-color-warning</div>\n<div class="is-color text-color-error">@text-color-error</div>');
              this.h2('Background colors');
              this.exampleHtml('<div class="is-color background-color-info">@background-color-info</div>\n<div class="is-color background-color-success">@background-color-success</div>\n<div class="is-color background-color-warning">@background-color-warning</div>\n<div class="is-color background-color-error">@background-color-error</div>\n<div class="is-color"></div>\n<div class="is-color background-color-highlight">@background-color-highlight</div>\n<div class="is-color background-color-selected">@background-color-selected</div>\n<div class="is-color app-background-color">@app-background-color</div>');
              this.h2('Base colors');
              this.exampleHtml('<div class="is-color base-background-color">@base-background-color</div>\n<div class="is-color base-border-color">@base-border-color</div>');
              this.h2('Component colors');
              this.exampleHtml('<div class="is-color pane-item-background-color">@pane-item-background-color</div>\n<div class="is-color pane-item-border-color">@pane-item-border-color</div>\n<div class="is-color"></div>\n<div class="is-color input-background-color">@input-background-color</div>\n<div class="is-color input-border-color">@input-border-color</div>\n<div class="is-color"></div>\n<div class="is-color tool-panel-background-color">@tool-panel-background-color</div>\n<div class="is-color tool-panel-border-color">@tool-panel-border-color</div>\n<div class="is-color inset-panel-background-color">@inset-panel-background-color</div>\n<div class="is-color inset-panel-border-color">@inset-panel-border-color</div>\n<div class="is-color panel-heading-background-color">@panel-heading-background-color</div>\n<div class="is-color panel-heading-border-color">@panel-heading-border-color</div>\n<div class="is-color overlay-background-color">@overlay-background-color</div>\n<div class="is-color overlay-border-color">@overlay-border-color</div>\n<div class="is-color"></div>\n<div class="is-color button-background-color">@button-background-color</div>\n<div class="is-color button-background-color-hover">@button-background-color-hover</div>\n<div class="is-color button-background-color-selected">@button-background-color-selected</div>\n<div class="is-color button-border-color">@button-border-color</div>\n<div class="color"></div>\n<div class="is-color tab-bar-background-color">@tab-bar-background-color</div>\n<div class="is-color tab-bar-border-color">@tab-bar-border-color</div>\n<div class="is-color tab-background-color">@tab-background-color</div>\n<div class="is-color tab-background-color-active">@tab-background-color-active</div>\n<div class="is-color tab-border-color">@tab-border-color</div>\n<div class="is-color"></div>\n<div class="is-color tree-view-background-color">@tree-view-background-color</div>\n<div class="is-color tree-view-border-color">@tree-view-border-color</div>');
              this.h2('Site colors');
              this.exampleHtml('<div class="is-color ui-site-color-1">@ui-site-color-1</div>\n<div class="is-color ui-site-color-2">@ui-site-color-2</div>\n<div class="is-color ui-site-color-3">@ui-site-color-3</div>\n<div class="is-color ui-site-color-4">@ui-site-color-4</div>\n<div class="is-color ui-site-color-5">@ui-site-color-5</div>');
              this.h2('Sizes');
              this.exampleHtml('<div class="is-size disclosure-arrow-size">@disclosure-arrow-size</div>\n<div class="is-size component-padding">@component-padding</div>\n<div class="is-size component-icon-padding">@component-icon-padding</div>\n<div class="is-size component-icon-size">@component-icon-size</div>\n<div class="is-size component-line-height">@component-line-height</div>\n<div class="is-size tab-height">@tab-height</div>\n<div class="is-size font-size">@font-size</div>');
              this.h2('Misc');
              return this.exampleHtml('<div class="is-radius component-border-radius">@component-border-radius</div>\n<div class="is-font font-family">@font-family</div>');
            });
            _this.exampleSection('icons', 'Icons', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw("Atom comes bundled with the Octicons. It lets you easily add icons to your packages.");
                };
              })(this));
              this.p((function(_this) {
                return function() {
                  return _this.raw('Currently version <code>4.4.0</code> is available. In addition some older icons from version <code>2.1.2</code> are still kept for backwards compatibility. Make sure to use the <code>icon icon-</code> prefix in front of an icon name. See the <a href="http://flight-manual.atom.io/hacking-atom/sections/iconography/">documentation</a> for more details.');
                };
              })(this));
              this.h2('Octicons');
              return this.exampleHtml('<span class=\'icon icon-alert native-key-bindings\'>alert</span>\n<span class=\'icon icon-alignment-align\'>alignment-align</span>\n<span class=\'icon icon-alignment-aligned-to\'>alignment-aligned-to</span>\n<span class=\'icon icon-alignment-unalign\'>alignment-unalign</span>\n<span class=\'icon icon-arrow-down\'>arrow-down</span>\n<span class=\'icon icon-arrow-left\'>arrow-left</span>\n<span class=\'icon icon-arrow-right\'>arrow-right</span>\n<span class=\'icon icon-arrow-small-down\'>arrow-small-down</span>\n<span class=\'icon icon-arrow-small-left\'>arrow-small-left</span>\n<span class=\'icon icon-arrow-small-right\'>arrow-small-right</span>\n<span class=\'icon icon-arrow-small-up\'>arrow-small-up</span>\n<span class=\'icon icon-arrow-up\'>arrow-up</span>\n<span class=\'icon icon-beaker\'>beaker</span>\n<span class=\'icon icon-beer\'>beer</span>\n<span class=\'icon icon-bell\'>bell</span>\n<span class=\'icon icon-bold\'>bold</span>\n<span class=\'icon icon-book\'>book</span>\n<span class=\'icon icon-bookmark\'>bookmark</span>\n<span class=\'icon icon-briefcase\'>briefcase</span>\n<span class=\'icon icon-broadcast\'>broadcast</span>\n<span class=\'icon icon-browser\'>browser</span>\n<span class=\'icon icon-bug\'>bug</span>\n<span class=\'icon icon-calendar\'>calendar</span>\n<span class=\'icon icon-check\'>check</span>\n<span class=\'icon icon-checklist\'>checklist</span>\n<span class=\'icon icon-chevron-down\'>chevron-down</span>\n<span class=\'icon icon-chevron-left\'>chevron-left</span>\n<span class=\'icon icon-chevron-right\'>chevron-right</span>\n<span class=\'icon icon-chevron-up\'>chevron-up</span>\n<span class=\'icon icon-circle-slash\'>circle-slash</span>\n<span class=\'icon icon-circuit-board\'>circuit-board</span>\n<span class=\'icon icon-clippy\'>clippy</span>\n<span class=\'icon icon-clock\'>clock</span>\n<span class=\'icon icon-cloud-download\'>cloud-download</span>\n<span class=\'icon icon-cloud-upload\'>cloud-upload</span>\n<span class=\'icon icon-code\'>code</span>\n<span class=\'icon icon-color-mode\'>color-mode</span>\n<span class=\'icon icon-comment\'>comment</span>\n<span class=\'icon icon-comment-add\'>comment-add</span>\n<span class=\'icon icon-comment-discussion\'>comment-discussion</span>\n<span class=\'icon icon-credit-card\'>credit-card</span>\n<span class=\'icon icon-dash\'>dash</span>\n<span class=\'icon icon-dashboard\'>dashboard</span>\n<span class=\'icon icon-database\'>database</span>\n<span class=\'icon icon-desktop-download\'>desktop-download</span>\n<span class=\'icon icon-device-camera\'>device-camera</span>\n<span class=\'icon icon-device-camera-video\'>device-camera-video</span>\n<span class=\'icon icon-device-desktop\'>device-desktop</span>\n<span class=\'icon icon-device-mobile\'>device-mobile</span>\n<span class=\'icon icon-diff\'>diff</span>\n<span class=\'icon icon-diff-added\'>diff-added</span>\n<span class=\'icon icon-diff-ignored\'>diff-ignored</span>\n<span class=\'icon icon-diff-modified\'>diff-modified</span>\n<span class=\'icon icon-diff-removed\'>diff-removed</span>\n<span class=\'icon icon-diff-renamed\'>diff-renamed</span>\n<span class=\'icon icon-ellipses\'>ellipses</span>\n<span class=\'icon icon-ellipsis\'>ellipsis</span>\n<span class=\'icon icon-eye\'>eye</span>\n<span class=\'icon icon-eye-unwatch\'>eye-unwatch</span>\n<span class=\'icon icon-eye-watch\'>eye-watch</span>\n<span class=\'icon icon-file\'>file</span>\n<span class=\'icon icon-file-add\'>file-add</span>\n<span class=\'icon icon-file-binary\'>file-binary</span>\n<span class=\'icon icon-file-code\'>file-code</span>\n<span class=\'icon icon-file-directory\'>file-directory</span>\n<span class=\'icon icon-file-directory-create\'>file-directory-create</span>\n<span class=\'icon icon-file-media\'>file-media</span>\n<span class=\'icon icon-file-pdf\'>file-pdf</span>\n<span class=\'icon icon-file-submodule\'>file-submodule</span>\n<span class=\'icon icon-file-symlink-directory\'>file-symlink-directory</span>\n<span class=\'icon icon-file-symlink-file\'>file-symlink-file</span>\n<span class=\'icon icon-file-text\'>file-text</span>\n<span class=\'icon icon-file-zip\'>file-zip</span>\n<span class=\'icon icon-flame\'>flame</span>\n<span class=\'icon icon-fold\'>fold</span>\n<span class=\'icon icon-gear\'>gear</span>\n<span class=\'icon icon-gift\'>gift</span>\n<span class=\'icon icon-gist\'>gist</span>\n<span class=\'icon icon-gist-fork\'>gist-fork</span>\n<span class=\'icon icon-gist-new\'>gist-new</span>\n<span class=\'icon icon-gist-private\'>gist-private</span>\n<span class=\'icon icon-gist-secret\'>gist-secret</span>\n<span class=\'icon icon-git-branch\'>git-branch</span>\n<span class=\'icon icon-git-branch-create\'>git-branch-create</span>\n<span class=\'icon icon-git-branch-delete\'>git-branch-delete</span>\n<span class=\'icon icon-git-commit\'>git-commit</span>\n<span class=\'icon icon-git-compare\'>git-compare</span>\n<span class=\'icon icon-git-fork-private\'>git-fork-private</span>\n<span class=\'icon icon-git-merge\'>git-merge</span>\n<span class=\'icon icon-git-pull-request\'>git-pull-request</span>\n<span class=\'icon icon-git-pull-request-abandoned\'>git-pull-request-abandoned</span>\n<span class=\'icon icon-globe\'>globe</span>\n<span class=\'icon icon-grabber\'>grabber</span>\n<span class=\'icon icon-graph\'>graph</span>\n<span class=\'icon icon-heart\'>heart</span>\n<span class=\'icon icon-history\'>history</span>\n<span class=\'icon icon-home\'>home</span>\n<span class=\'icon icon-horizontal-rule\'>horizontal-rule</span>\n<span class=\'icon icon-hourglass\'>hourglass</span>\n<span class=\'icon icon-hubot\'>hubot</span>\n<span class=\'icon icon-inbox\'>inbox</span>\n<span class=\'icon icon-info\'>info</span>\n<span class=\'icon icon-issue-closed\'>issue-closed</span>\n<span class=\'icon icon-issue-opened\'>issue-opened</span>\n<span class=\'icon icon-issue-reopened\'>issue-reopened</span>\n<span class=\'icon icon-italic\'>italic</span>\n<span class=\'icon icon-jersey\'>jersey</span>\n<span class=\'icon icon-jump-down\'>jump-down</span>\n<span class=\'icon icon-jump-left\'>jump-left</span>\n<span class=\'icon icon-jump-right\'>jump-right</span>\n<span class=\'icon icon-jump-up\'>jump-up</span>\n<span class=\'icon icon-key\'>key</span>\n<span class=\'icon icon-keyboard\'>keyboard</span>\n<span class=\'icon icon-law\'>law</span>\n<span class=\'icon icon-light-bulb\'>light-bulb</span>\n<span class=\'icon icon-link\'>link</span>\n<span class=\'icon icon-link-external\'>link-external</span>\n<span class=\'icon icon-list-ordered\'>list-ordered</span>\n<span class=\'icon icon-list-unordered\'>list-unordered</span>\n<span class=\'icon icon-location\'>location</span>\n<span class=\'icon icon-lock\'>lock</span>\n<span class=\'icon icon-log-in\'>log-in</span>\n<span class=\'icon icon-log-out\'>log-out</span>\n<span class=\'icon icon-logo-gist\'>logo-gist</span>\n<span class=\'icon icon-logo-github\'>logo-github</span>\n<span class=\'icon icon-mail\'>mail</span>\n<span class=\'icon icon-mail-read\'>mail-read</span>\n<span class=\'icon icon-mail-reply\'>mail-reply</span>\n<span class=\'icon icon-mark-github\'>mark-github</span>\n<span class=\'icon icon-markdown\'>markdown</span>\n<span class=\'icon icon-megaphone\'>megaphone</span>\n<span class=\'icon icon-mention\'>mention</span>\n<span class=\'icon icon-microscope\'>microscope</span>\n<span class=\'icon icon-milestone\'>milestone</span>\n<span class=\'icon icon-mirror\'>mirror</span>\n<span class=\'icon icon-mirror-private\'>mirror-private</span>\n<span class=\'icon icon-mirror-public\'>mirror-public</span>\n<span class=\'icon icon-mortar-board\'>mortar-board</span>\n<span class=\'icon icon-move-down\'>move-down</span>\n<span class=\'icon icon-move-left\'>move-left</span>\n<span class=\'icon icon-move-right\'>move-right</span>\n<span class=\'icon icon-move-up\'>move-up</span>\n<span class=\'icon icon-mute\'>mute</span>\n<span class=\'icon icon-no-newline\'>no-newline</span>\n<span class=\'icon icon-octoface\'>octoface</span>\n<span class=\'icon icon-organization\'>organization</span>\n<span class=\'icon icon-package\'>package</span>\n<span class=\'icon icon-paintcan\'>paintcan</span>\n<span class=\'icon icon-pencil\'>pencil</span>\n<span class=\'icon icon-person\'>person</span>\n<span class=\'icon icon-person-add\'>person-add</span>\n<span class=\'icon icon-person-follow\'>person-follow</span>\n<span class=\'icon icon-pin\'>pin</span>\n<span class=\'icon icon-playback-fast-forward\'>playback-fast-forward</span>\n<span class=\'icon icon-playback-pause\'>playback-pause</span>\n<span class=\'icon icon-playback-play\'>playback-play</span>\n<span class=\'icon icon-playback-rewind\'>playback-rewind</span>\n<span class=\'icon icon-plug\'>plug</span>\n<span class=\'icon icon-plus-small\'>plus-small</span>\n<span class=\'icon icon-plus\'>plus</span>\n<span class=\'icon icon-podium\'>podium</span>\n<span class=\'icon icon-primitive-dot\'>primitive-dot</span>\n<span class=\'icon icon-primitive-square\'>primitive-square</span>\n<span class=\'icon icon-pulse\'>pulse</span>\n<span class=\'icon icon-puzzle\'>puzzle</span>\n<span class=\'icon icon-question\'>question</span>\n<span class=\'icon icon-quote\'>quote</span>\n<span class=\'icon icon-radio-tower\'>radio-tower</span>\n<span class=\'icon icon-remove-close\'>remove-close</span>\n<span class=\'icon icon-reply\'>reply</span>\n<span class=\'icon icon-repo\'>repo</span>\n<span class=\'icon icon-repo-clone\'>repo-clone</span>\n<span class=\'icon icon-repo-create\'>repo-create</span>\n<span class=\'icon icon-repo-delete\'>repo-delete</span>\n<span class=\'icon icon-repo-force-push\'>repo-force-push</span>\n<span class=\'icon icon-repo-forked\'>repo-forked</span>\n<span class=\'icon icon-repo-pull\'>repo-pull</span>\n<span class=\'icon icon-repo-push\'>repo-push</span>\n<span class=\'icon icon-repo-sync\'>repo-sync</span>\n<span class=\'icon icon-rocket\'>rocket</span>\n<span class=\'icon icon-rss\'>rss</span>\n<span class=\'icon icon-ruby\'>ruby</span>\n<span class=\'icon icon-screen-full\'>screen-full</span>\n<span class=\'icon icon-screen-normal\'>screen-normal</span>\n<span class=\'icon icon-search\'>search</span>\n<span class=\'icon icon-search-save\'>search-save</span>\n<span class=\'icon icon-server\'>server</span>\n<span class=\'icon icon-settings\'>settings</span>\n<span class=\'icon icon-shield\'>shield</span>\n<span class=\'icon icon-sign-in\'>sign-in</span>\n<span class=\'icon icon-sign-out\'>sign-out</span>\n<span class=\'icon icon-smiley\'>smiley</span>\n<span class=\'icon icon-split\'>split</span>\n<span class=\'icon icon-squirrel\'>squirrel</span>\n<span class=\'icon icon-star\'>star</span>\n<span class=\'icon icon-star-add\'>star-add</span>\n<span class=\'icon icon-star-delete\'>star-delete</span>\n<span class=\'icon icon-steps\'>steps</span>\n<span class=\'icon icon-stop\'>stop</span>\n<span class=\'icon icon-sync\'>sync</span>\n<span class=\'icon icon-tag\'>tag</span>\n<span class=\'icon icon-tag-add\'>tag-add</span>\n<span class=\'icon icon-tag-remove\'>tag-remove</span>\n<span class=\'icon icon-tasklist\'>tasklist</span>\n<span class=\'icon icon-telescope\'>telescope</span>\n<span class=\'icon icon-terminal\'>terminal</span>\n<span class=\'icon icon-text-size\'>text-size</span>\n<span class=\'icon icon-three-bars\'>three-bars</span>\n<span class=\'icon icon-thumbsdown\'>thumbsdown</span>\n<span class=\'icon icon-thumbsup\'>thumbsup</span>\n<span class=\'icon icon-tools\'>tools</span>\n<span class=\'icon icon-trashcan\'>trashcan</span>\n<span class=\'icon icon-triangle-down\'>triangle-down</span>\n<span class=\'icon icon-triangle-left\'>triangle-left</span>\n<span class=\'icon icon-triangle-right\'>triangle-right</span>\n<span class=\'icon icon-triangle-up\'>triangle-up</span>\n<span class=\'icon icon-unfold\'>unfold</span>\n<span class=\'icon icon-unmute\'>unmute</span>\n<span class=\'icon icon-unverified\'>unverified</span>\n<span class=\'icon icon-verified\'>verified</span>\n<span class=\'icon icon-versions\'>versions</span>\n<span class=\'icon icon-watch\'>watch</span>\n<span class=\'icon icon-x\'>x</span>\n<span class=\'icon icon-zap\'>zap</span>');
            });
            _this.exampleSection('inputs', 'Inputs', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('Various inputs and controls.');
                };
              })(this));
              this.h2('Text Inputs');
              this.exampleHtml('<input class=\'input-text\' type=\'text\' placeholder=\'Text\'>\n<input class=\'input-search\' type=\'search\' placeholder=\'Search\'>\n<textarea class=\'input-textarea\' placeholder=\'Text Area\'></textarea>');
              this.h2('Controls');
              this.exampleHtml('<label class=\'input-label\'><input class=\'input-radio\' type=\'radio\' name=\'radio\'> Radio</label>\n<label class=\'input-label\'><input class=\'input-radio\' type=\'radio\' name=\'radio\' checked> Radio</label>\n<label class=\'input-label\'><input class=\'input-checkbox\' type=\'checkbox\' checked> Checkbox</label>\n<label class=\'input-label\'><input class=\'input-toggle\' type=\'checkbox\' checked> Toggle</label>\n<input class=\'input-range\' type=\'range\'>');
              this.h2('Misc');
              return this.exampleHtml('<input class=\'input-color\' type=\'color\' value=\'#FF85FF\'>\n<input class=\'input-number\' type=\'number\' min=\'1\' max=\'10\' placeholder=\'1-10\'>\n<select class=\'input-select\'><option>Option 1</option><option>Option 2</option><option>Option 3</option></select>');
            });
            _this.exampleSection('text', 'Text', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('There are a number of text classes.');
                };
              })(this));
              this.h2('text-* classes');
              this.exampleHtml('<div class=\'text-smaller\'>Smaller text</div>\n<div>Normal text</div>\n<div class=\'text-subtle\'>Subtle text</div>\n<div class=\'text-highlight\'>Highlighted text</div>\n<div class=\'text-info\'>Info text</div>\n<div class=\'text-success\'>Success text</div>\n<div class=\'text-warning\'>Warning text</div>\n<div class=\'text-error\'>Error text</div>');
              this.h2('highlight-* classes');
              return this.exampleHtml('<span class=\'inline-block\'>Normal</span>\n<span class=\'inline-block highlight\'>Highlighted</span>\n<span class=\'inline-block highlight-info\'>Info</span>\n<span class=\'inline-block highlight-success\'>Success</span>\n<span class=\'inline-block highlight-warning\'>Warning</span>\n<span class=\'inline-block highlight-error\'>Error</span>');
            });
            _this.exampleSection('layout', 'Layout', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('A few things that might be useful for general layout.');
                };
              })(this));
              this.h2('.block');
              this.p('Sometimes you need to separate components vertically. Say in a form.');
              this.exampleHtml('<div class=\'block\'>\n  <label>You might want to type something here.</label>\n  <atom-text-editor mini>Something you typed...</atom-text-editor>\n</div>\n<div class=\'block\'>\n  <label class=\'icon icon-file-directory\'>Another field with an icon</label>\n  <atom-text-editor mini>Something else you typed...</atom-text-editor>\n</div>\n<div class=\'block\'>\n  <button class=\'btn\'>Do it</button>\n</div>');
              this.h2('.inline-block');
              this.p('Sometimes you need to separate components horizontally.');
              this.exampleHtml('<div class=\'block\'>\n  <button class=\'inline-block btn\'>Do it</button>\n  <button class=\'inline-block btn\'>Another</button>\n  <button class=\'inline-block btn\'>OMG again</button>\n</div>');
              this.h2('.inline-block-tight');
              this.p('You might want things to be a little closer to each other.');
              return this.exampleHtml('<div class=\'block\'>\n  <button class=\'inline-block-tight btn\'>Do it</button>\n  <button class=\'inline-block-tight btn\'>Another</button>\n  <button class=\'inline-block-tight btn\'>OMG again</button>\n</div>');
            });
            _this.exampleSection('git', 'Git Status', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('Often we need git related classes to specify status.');
                };
              })(this));
              this.h2('status-* classes');
              this.exampleHtml('<div class=\'status-ignored\'>Ignored</div>\n<div class=\'status-added\'>Added</div>\n<div class=\'status-modified\'>Modified</div>\n<div class=\'status-removed\'>Removed</div>\n<div class=\'status-renamed\'>Renamed</div>');
              this.h2('status-* classes with related icons');
              return this.exampleHtml('<span class=\'inline-block status-ignored icon icon-diff-ignored\'></span>\n<span class=\'inline-block status-added icon icon-diff-added\'></span>\n<span class=\'inline-block status-modified icon icon-diff-modified\'></span>\n<span class=\'inline-block status-removed icon icon-diff-removed\'></span>\n<span class=\'inline-block status-renamed icon icon-diff-renamed\'></span>');
            });
            _this.exampleSection('site-highlight', 'Site colors', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('Site colors are used for collaboration. A site is another collaborator.');
                };
              })(this));
              this.h2('ui-site-* classes');
              this.p((function(_this) {
                return function() {
                  return _this.raw('These classes only set the background color, no other styles.\nYou can also use LESS variables <code>@ui-site-#</code> in your plugins where\n<code>#</code> is a number between 1 and 5.');
                };
              })(this));
              this.p((function(_this) {
                return function() {
                  return _this.raw('Site colors will always be in the color progression you see here.');
                };
              })(this));
              return this.exampleHtml('<div class=\'block ui-site-1\'></div>\n<div class=\'block ui-site-2\'></div>\n<div class=\'block ui-site-3\'></div>\n<div class=\'block ui-site-4\'></div>\n<div class=\'block ui-site-5\'></div>');
            });
            _this.exampleSection('badges', 'Badges', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('Badges are typically used to show numbers.');
                };
              })(this));
              this.h2('Standalone badges');
              this.exampleHtml('<div class=\'block\'>\n  <span class=\'badge\'>0</span>\n  <span class=\'badge\'>8</span>\n  <span class=\'badge\'>27</span>\n  <span class=\'badge\'>450</span>\n  <span class=\'badge\'>2869</span>\n</div>');
              this.h2('Colored badges');
              this.exampleHtml('<div class=\'block\'>\n  <span class=\'badge badge-info\'>78</span>\n  <span class=\'badge badge-success\'>3</span>\n  <span class=\'badge badge-warning\'>14</span>\n  <span class=\'badge badge-error\'>1845</span>\n</div>');
              this.h2('Badge sizes');
              this.p((function(_this) {
                return function() {
                  return _this.raw('By default the <code>@font-size</code> variable from themes is used. Additionally there are also 3 predefined sizes.');
                };
              })(this));
              this.exampleHtml('<div class=\'block\'>Large <span class=\'badge badge-large\'>8</span></div>\n<div class=\'block\'>Medium <span class=\'badge badge-medium\'>2</span></div>\n<div class=\'block\'>Small <span class=\'badge badge-small\'>7</span></div>');
              this.p((function(_this) {
                return function() {
                  return _this.raw('If you like the size change depending on the parent, use the <code>badge-flexible</code> class. Note: Best used for larger sizes. For smaller sizes it could cause the number to be mis-aligned by a pixel.');
                };
              })(this));
              this.exampleHtml('<h1 class=\'block\'>Heading <span class=\'badge badge-flexible\'>1</span></h1>\n<h2 class=\'block\'>Heading <span class=\'badge badge-flexible\'>2</span></h2>\n<h3 class=\'block\'>Heading <span class=\'badge badge-flexible\'>3</span></h3>');
              this.h2('Icon Badges');
              this.p((function(_this) {
                return function() {
                  return _this.raw('See the icons section to get an overview of all Octicons.');
                };
              })(this));
              return this.exampleHtml('<div class=\'block\'>\n  <span class=\'badge icon icon-gear\'>4</span>\n  <span class=\'badge badge-info icon icon-cloud-download\'>13</span>\n  <span class=\'badge badge-success icon icon-octoface\'>5</span>\n</div>');
            });
            _this.exampleSection('buttons', 'Buttons', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('Buttons are similar to bootstrap buttons');
                };
              })(this));
              this.h2('Standalone buttons');
              this.exampleHtml('<div class=\'block\'>\n  <button class=\'btn\'>Button</button>\n</div>\n<div class=\'block\'>\n  <button class=\'btn btn-xs\'>Extra Small Button</button>\n</div>\n<div class=\'block\'>\n  <button class=\'btn btn-sm\'>Small Button</button>\n</div>\n<div class=\'block\'>\n  <button class=\'btn btn-lg\'>Large Button</button>\n</div>');
              this.h2('Colored buttons');
              this.exampleHtml('<div class=\'block\'>\n  <button class=\'btn btn-primary inline-block-tight\'>Primary</button>\n  <button class=\'btn btn-primary selected inline-block-tight\'>Selected Primary</button>\n</div>\n\n<div class=\'block\'>\n  <button class=\'btn btn-info inline-block-tight\'>Info</button>\n  <button class=\'btn btn-info selected inline-block-tight\'>Selected Info</button>\n</div>\n\n<div class=\'block\'>\n  <button class=\'btn btn-success inline-block-tight\'>Success</button>\n  <button class=\'btn btn-success selected inline-block-tight\'>Selected Success</button>\n</div>\n\n<div class=\'block\'>\n  <button class=\'btn btn-warning inline-block-tight\'>Warning</button>\n  <button class=\'btn btn-warning selected inline-block-tight\'>Selected Warning</button>\n</div>\n\n<div class=\'block\'>\n  <button class=\'btn btn-error inline-block-tight\'>Error</button>\n  <button class=\'btn btn-error selected inline-block-tight\'>Selected Error</button>\n</div>');
              this.h2('Icon buttons');
              this.p((function(_this) {
                return function() {
                  return _this.raw('Overview of all <a href="https://octicons.github.com/">Octicons</a>.');
                };
              })(this));
              this.exampleHtml('<div class=\'block\'>\n  <button class=\'btn icon icon-gear inline-block-tight\'>Settings</button>\n  <button class=\'btn btn-primary icon icon-cloud-download inline-block-tight\'>Install</button>\n  <button class=\'btn btn-error icon icon-octoface inline-block-tight\'>Danger</button>\n</div>');
              this.h2('Button Groups');
              this.exampleHtml('<div class=\'block\'>\n  <div>Normal size</div>\n  <div class=\'btn-group\'>\n    <button class=\'btn\'>One</button>\n    <button class=\'btn\'>Two</button>\n    <button class=\'btn\'>Three</button>\n  </div>\n</div>\n\n<div class=\'block\'>\n  <div>Extra Small</div>\n  <div class=\'btn-group btn-group-xs\'>\n    <button class=\'btn\'>One</button>\n    <button class=\'btn\'>Two</button>\n    <button class=\'btn\'>Three</button>\n  </div>\n</div>\n\n<div class=\'block\'>\n  <div>Small</div>\n  <div class=\'btn-group btn-group-sm\'>\n    <button class=\'btn\'>One</button>\n    <button class=\'btn\'>Two</button>\n    <button class=\'btn\'>Three</button>\n  </div>\n</div>\n\n<div class=\'block\'>\n  <div>Large</div>\n  <div class=\'btn-group btn-group-lg\'>\n    <button class=\'btn\'>One</button>\n    <button class=\'btn\'>Two</button>\n    <button class=\'btn\'>Three</button>\n  </div>\n</div>');
              this.h2('Button Toolbars');
              this.exampleHtml('<div class=\'btn-toolbar\'>\n  <div class=\'btn-group\'>\n    <button class=\'btn\'>One</button>\n    <button class=\'btn\'>Two</button>\n    <button class=\'btn\'>Three</button>\n  </div>\n\n  <div class=\'btn-group\'>\n    <button class=\'btn\'>Four</button>\n    <button class=\'btn\'>Five</button>\n  </div>\n\n  <button class=\'btn\'>Six</button>\n  <button class=\'btn\'>Seven</button>\n</div>');
              this.h2('Selected buttons');
              this.p((function(_this) {
                return function() {
                  return _this.raw('Buttons can be marked selected by adding a <code>.selected</code> class. Useful for toggle groups.');
                };
              })(this));
              return this.exampleHtml('<div class=\'block\'>\n  <div class=\'btn-group\'>\n    <button class=\'btn selected\'>One</button>\n    <button class=\'btn\'>Two</button>\n    <button class=\'btn\'>Three</button>\n  </div>\n</div>\n\n<div class=\'block\'>\n  <div class=\'btn-group\'>\n    <button class=\'btn\'>One</button>\n    <button class=\'btn selected\'>Two</button>\n    <button class=\'btn\'>Three</button>\n  </div>\n</div>\n\n<div class=\'block\'>\n  <div class=\'btn-group\'>\n    <button class=\'btn\'>One</button>\n    <button class=\'btn\'>Two</button>\n    <button class=\'btn selected\'>Three</button>\n  </div>\n</div>\n\n<div class=\'block\'>\n  <div class=\'btn-group\'>\n    <button class=\'btn selected\'>One</button>\n    <button class=\'btn selected\'>Two</button>\n    <button class=\'btn\'>Three</button>\n  </div>\n</div>');
            });
            _this.exampleSection('panel', 'Panels', function() {
              this.p('A container attached to some side of the Atom UI.');
              this.exampleHtml('<atom-panel>\n  Some content\n</atom-panel>');
              this.h2('Inset Panel');
              this.p('Use inside a panel');
              this.exampleHtml('<atom-panel class=\'padded\'>\n  <div class="inset-panel padded">Some inset content</div>\n</atom-panel>');
              this.h2('With a heading');
              return this.exampleHtml('<atom-panel class=\'padded\'>\n  <div class="inset-panel">\n    <div class="panel-heading">An inset-panel heading</div>\n    <div class="panel-body padded">Some Content</div>\n  </div>\n</atom-panel>');
            });
            _this.exampleSection('list-group', 'List Group', function() {
              this.p('Use for anything that requires a list.');
              this.exampleHtml('<ul class=\'list-group\'>\n  <li class=\'list-item\'>Normal item</li>\n  <li class=\'list-item selected\'>This is the Selected item</li>\n  <li class=\'list-item text-subtle\'>Subtle</li>\n  <li class=\'list-item text-info\'>Info</li>\n  <li class=\'list-item text-success\'>Success</li>\n  <li class=\'list-item text-warning\'>Warning</li>\n  <li class=\'list-item text-error\'>Error</li>\n</ul>');
              this.h2('With icons');
              return this.exampleHtml('<ul class=\'list-group\'>\n  <li class=\'list-item\'>\n    <span class=\'icon icon-file-directory\'>Using a span with an icon</span>\n  </li>\n  <li class=\'list-item\'>\n    <i class=\'icon icon-file-directory\'></i>\n    <span>With .icon-file-directory using &lt;i&gt; tags</span>\n  </li>\n  <li class=\'list-item selected\'>\n    <span class=\'icon icon-file-directory\'>Selected with .icon-file-directory</span>\n  </li>\n  <li class=\'list-item\'>\n    <span class=\'no-icon\'>With .no-icon</span>\n  </li>\n  <li class=\'list-item\'>\n    <span class=\'icon icon-file-text\'>With icon-file-text</span>\n  </li>\n  <li class=\'list-item\'>\n    <span class=\'icon icon-file-media\'>With icon-file-media</span>\n  </li>\n  <li class=\'list-item\'>\n    <span class=\'icon icon-file-symlink-file\'>With icon-file-symlink-file</span>\n  </li>\n  <li class=\'list-item\'>\n    <span class=\'icon icon-file-submodule\'>With icon-file-submodule</span>\n  </li>\n  <li class=\'list-item\'>\n    <span class=\'icon icon-book\'>With icon-book</span>\n  </li>\n</ul>');
            });
            _this.exampleSection('list-tree', 'List Tree', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('A <code>.list-tree</code> is a special case of <code>.list-group</code>.');
                };
              })(this));
              this.exampleHtml('<ul class=\'list-tree\'>\n  <li class=\'list-nested-item\'>\n    <div class=\'list-item\'>\n      <span class=\'icon icon-file-directory\'>A Directory</span>\n    </div>\n\n    <ul class=\'list-tree\'>\n      <li class=\'list-nested-item\'>\n        <div class=\'list-item\'>\n          <span class=\'icon icon-file-directory\'>Nested Directory</span>\n        </div>\n\n        <ul class=\'list-tree\'>\n          <li class=\'list-item\'>\n            <span class=\'icon icon-file-text\'>File one</span>\n          </li>\n        </ul>\n      </li>\n\n      <li class=\'list-nested-item collapsed\'>\n        <div class=\'list-item\'>\n          <span class=\'icon icon-file-directory\'>Collapsed Nested Directory</span>\n        </div>\n\n        <ul class=\'list-tree\'>\n          <li class=\'list-item\'>\n            <span class=\'icon icon-file-text\'>File one</span>\n          </li>\n        </ul>\n      </li>\n\n      <li class=\'list-item\'>\n        <span class=\'icon icon-file-text\'>File one</span>\n      </li>\n\n      <li class=\'list-item selected\'>\n        <span class=\'icon icon-file-text\'>File three .selected!</span>\n      </li>\n    </ul>\n  </li>\n\n  <li class=\'list-item\'>\n    <span class=\'icon icon-file-text\'>.icon-file-text</span>\n  </li>\n\n  <li class=\'list-item\'>\n    <span class=\'icon icon-file-symlink-file\'>.icon-file-symlink-file</span>\n  </li>');
              this.h2('With disclosure arrows');
              this.p((function(_this) {
                return function() {
                  return _this.raw('Add the class <code>.has-collapsable-children</code> to give the children with nested items disclosure arrows.');
                };
              })(this));
              this.exampleHtml('<ul class=\'list-tree has-collapsable-children\'>\n  <li class=\'list-nested-item\'>\n    <div class=\'list-item\'>\n      <span class=\'icon icon-file-directory\'>A Directory</span>\n    </div>\n\n    <ul class=\'list-tree\'>\n      <li class=\'list-nested-item\'>\n        <div class=\'list-item\'>\n          <span class=\'icon icon-file-directory\'>Nested Directory</span>\n        </div>\n\n        <ul class=\'list-tree\'>\n          <li class=\'list-item\'>\n            <span class=\'icon icon-file-text\'>File one</span>\n          </li>\n        </ul>\n      </li>\n\n      <li class=\'list-nested-item collapsed\'>\n        <div class=\'list-item\'>\n          <span class=\'icon icon-file-directory\'>Collapsed Nested Directory</span>\n        </div>\n\n        <ul class=\'list-tree\'>\n          <li class=\'list-item\'>\n            <span class=\'icon icon-file-text\'>File one</span>\n          </li>\n        </ul>\n      </li>\n\n      <li class=\'list-item\'>\n        <span class=\'icon icon-file-text\'>File one</span>\n      </li>\n\n      <li class=\'list-item selected\'>\n        <span class=\'icon icon-file-text\'>File three .selected!</span>\n      </li>\n    </ul>\n  </li>\n\n  <li class=\'list-item\'>\n    <span class=\'icon icon-file-text\'>.icon-file-text</span>\n  </li>\n\n  <li class=\'list-item\'>\n    <span class=\'icon icon-file-symlink-file\'>.icon-file-symlink-file</span>\n  </li>\n</ul>');
              this.h2('With disclosure arrows at only one level.');
              this.p((function(_this) {
                return function() {
                  return _this.raw('Add the class <code>.has-flat-children</code> to sub-<code>.list-tree</code>s to indicate that the children will not be collapsable.');
                };
              })(this));
              return this.exampleHtml('<ul class=\'list-tree has-collapsable-children \'>\n  <li class=\'list-nested-item\'>\n    <div class=\'list-item\'>\n      <span class=\'icon icon-file-text\'>This is a collapsable section</span>\n    </div>\n\n    <ul class=\'list-tree has-flat-children\'>\n      <li class=\'list-item\'>Something is here</li>\n      <li class=\'list-item selected\'>Something selected</li>\n    </ul>\n  </li>\n\n  <li class=\'list-nested-item\'>\n    <div class=\'list-item\'>\n      <span class=\'icon icon-file-directory\'>Another collapsable section</span>\n    </div>\n\n    <ul class=\'list-tree has-flat-children\'>\n      <li class=\'list-item\'>Something is here</li>\n      <li class=\'list-item\'>Something else</li>\n    </ul>\n  </li>\n</ul>');
            });
            _this.exampleSection('select-list', 'Select List', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('You wont be creating a <code>.select-list</code> directly, but will do so\nby extending the <code>SelectListView</code> class. Your\n<code>SelectListView</code> will usually specify only the list items,\nand hide/show the errors or loading message.');
                };
              })(this));
              this.p((function(_this) {
                return function() {
                  return _this.raw('This is how you will typically specify a <code>.select-list</code>.');
                };
              })(this));
              this.exampleOverlaySelectList();
              this.p((function(_this) {
                return function() {
                  return _this.raw('The list items have many options you can use, and shows you how they will display.');
                };
              })(this));
              this.h2('Basic example with one item selected');
              this.exampleHtml('<atom-panel class=\'modal\'>\n  <div class=\'select-list\'>\n    <ol class=\'list-group\'>\n      <li class=\'selected\'>one</li>\n      <li>two</li>\n      <li>three</li>\n    </ol>\n  </div>\n</atom-panel>');
              this.h2('Single line with icons');
              this.exampleHtml('<atom-panel class=\'modal\'>\n  <div class=\'select-list\'>\n    <ol class=\'list-group\'>\n      <li class=\'selected\'>\n        <div class=\'status status-added icon icon-diff-added\'></div>\n        <div class=\'icon icon-file-text\'>Some file</div>\n      </li>\n\n      <li>\n        <div class=\'status status-modified icon icon-diff-modified\'></div>\n        <div class=\'icon icon-file-text\'>Another file</div>\n      </li>\n\n      <li>\n        <div class=\'status status-removed icon icon-diff-removed\'></div>\n        <div class=\'icon icon-file-text\'>Yet another file</div>\n      </li>\n    </ol>\n  </div>\n</atom-panel>');
              this.h2('Single line with key-bindings');
              this.exampleHtml('<atom-panel class=\'modal\'>\n  <div class=\'select-list\'>\n    <ol class=\'list-group\'>\n      <li class=\'selected\'>\n        <div class=\'pull-right\'>\n          <kbd class=\'key-binding pull-right\'>⌘⌥↓</kbd>\n        </div>\n\n        <span class=\'icon icon-file-text\'>Some file</span>\n      </li>\n\n      <li>\n        <div class=\'pull-right key-bindings\'>\n          <kbd class=\'key-binding\'>⌘⌥A</kbd>\n          <kbd class=\'key-binding\'>⌘⌥O</kbd>\n        </div>\n\n        <span class=\'icon icon-file-text\'>Another file with a long name</span>\n      </li>\n\n      <li>\n        <div class=\'pull-right\'>\n          <kbd class=\'key-binding\'>⌘⌥↓</kbd>\n        </div>\n\n        <span class=\'icon icon-file-text\'>Yet another file</span>\n      </li>\n    </ol>\n  </div>\n</atom-panel>');
              this.h2('Multiple lines with no icons');
              this.exampleHtml('<atom-panel class=\'modal\'>\n  <div class=\'select-list\'>\n    <ol class=\'list-group\'>\n      <li class=\'two-lines\'>\n        <div class=\'primary-line\'>Primary line</div>\n        <div class=\'secondary-line\'>Secondary line</div>\n      </li>\n\n      <li class=\'two-lines selected\'>\n        <div class=\'primary-line\'>A thing</div>\n        <div class=\'secondary-line\'>Description of the thing</div>\n      </li>\n    </ol>\n  </div>\n</atom-panel>');
              this.h2('Multiple lines with icons');
              this.exampleHtml('<atom-panel class=\'modal\'>\n  <div class=\'select-list\'>\n    <ol class=\'list-group\'>\n      <li class=\'two-lines\'>\n        <div class=\'status status-added icon icon-diff-added\'></div>\n        <div class=\'primary-line icon icon-file-text\'>Primary line</div>\n        <div class=\'secondary-line no-icon\'>Secondary line</div>\n      </li>\n\n      <li class=\'two-lines selected\'>\n        <div class=\'status status-modified icon icon-diff-modified\'></div>\n        <div class=\'primary-line icon icon-file-symlink-file\'>A thing</div>\n        <div class=\'secondary-line no-icon\'>Description of the thing</div>\n      </li>\n\n      <li class=\'two-lines\'>\n        <div class=\'status status-renamed icon icon-diff-renamed\'></div>\n        <div class=\'primary-line icon icon-file-symlink-file\'>A thing</div>\n        <div class=\'secondary-line no-icon\'>Description of the thing</div>\n      </li>\n    </ol>\n  </div>\n</atom-panel>');
              this.h2('Using mark-active class to indicate the active item');
              this.p((function(_this) {
                return function() {
                  return _this.raw('Use ...');
                };
              })(this));
              this.exampleHtml('<atom-panel class=\'modal\'>\n  <div class=\'select-list\'>\n    <ol class=\'list-group mark-active\'>\n      <li class=\'selected\'>Selected &mdash; user is arrowing through the list.</li>\n      <li class=\'active\'>This is the active item</li>\n      <li class=\'selected active\'>Selected AND Active!</li>\n    </ol>\n  </div>\n</atom-panel>');
              this.h2('Error messages');
              this.exampleHtml('<atom-panel class=\'modal\'>\n  <div class=\'select-list\'>\n    <atom-text-editor mini>I searched for this</atom-text-editor>\n    <div class=\'error-message\'>Nothing has been found!</div>\n  </div>\n</atom-panel>');
              this.h2('Loading message');
              return this.exampleHtml('<atom-panel class=\'modal\'>\n  <div class=\'select-list\'>\n    <atom-text-editor mini>User input</atom-text-editor>\n    <div class=\'loading\'>\n      <span class=\'loading-message\'>Chill, bro. Things are loading.</span>\n      <span class=\'badge\'>1234</span>\n    </div>\n  </div>\n</atom-panel>');
            });
            _this.exampleSection('popover-list', 'Popover List', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('A <code>.popover-list</code> is a <code>.select-list</code> that\nis meant to popover the code for something like autocomplete.');
                };
              })(this));
              this.h2('Basic example with one item selected');
              return this.exampleHtml('<div class=\'select-list popover-list\'>\n  <atom-text-editor mini>\'User types here..\'</atom-text-editor>\n  <ol class=\'list-group\'>\n    <li class=\'selected\'>one</li>\n    <li>two</li>\n    <li>three</li>\n  </ol>\n</div>');
            });
            _this.exampleSection('modal-panel', 'Modals', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('Modals are like dialog boxes.');
                };
              })(this));
              return this.exampleHtml('<atom-panel class=\'modal\'>\n  <div>Some content</div>\n</atom-panel>');
            });
            _this.exampleSection('tooltips', 'Tooltips', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('You do not create the markup directly. You call\n<code>element.setTooltip(title, {command, commandElement}={})</code>.\nPassing in a <code>command</code> (like <code>find-and-replace:show-find</code>) and\n<code>commandElement</code> (context for the command) will yield a tip with a keystroke.');
                };
              })(this));
              return this.exampleHtml('<div class=\'tooltip top\'>\n  <div class=\'tooltip-arrow\'></div>\n  <div class=\'tooltip-inner\'>This is a message</div>\n</div>\n\n<div class=\'tooltip top\'>\n  <div class=\'tooltip-arrow\'></div>\n  <div class=\'tooltip-inner\'>\n    With a keystroke <span class="keystroke">cmd-shift-o</span>\n  </div>\n</div>');
            });
            _this.exampleSection('error-messages', 'Messages', function() {
              this.p((function(_this) {
                return function() {
                  return _this.raw('Use to convey info to the user when something happens. See <code>find-and-replace</code>\nfor an example.');
                };
              })(this));
              this.h2('Error messages');
              this.exampleHtml('<ul class=\'error-messages block\'>\n  <li>This is an error!</li>\n  <li>And another</li>\n</ul>');
              this.h2('Info messages');
              this.exampleHtml('<ul class=\'info-messages block\'>\n  <li>Info line</li>\n  <li>Another info line</li>\n</ul>');
              this.h2('Background Messages');
              this.p((function(_this) {
                return function() {
                  return _this.raw('Subtle background messages for panes. Use for cases when there are no results.');
                };
              })(this));
              this.exampleHtml('<ul class=\'background-message\'>\n  <li>No Results</li>\n</ul>');
              this.p((function(_this) {
                return function() {
                  return _this.raw('Centered background messages will center horizontally and vertically.\nYour container for this element must have <code>position</code> set with <code>relative</code> or\n<code>absolute</code>.');
                };
              })(this));
              return this.exampleHtml('<ul class=\'background-message centered\'>\n  <li>No Results</li>\n</ul>');
            });
            return _this.exampleSection('progress', 'Loading/Progress', function() {
              this.h2('Progress Bars');
              this.exampleHtml('<div class=\'block\'>\n  <progress class=\'inline-block\'></progress>\n  <span class=\'inline-block\'>Indeterminate</span>\n</div>\n\n<div class=\'block\'>\n  <progress class=\'inline-block\' max=\'100\' value=\'25\'></progress>\n  <span class=\'inline-block\'>At 25%</span>\n</div>\n\n<div class=\'block\'>\n  <progress class=\'inline-block\' max=\'100\' value=\'50\'></progress>\n  <span class=\'inline-block\'>At 50%</span>\n</div>\n\n<div class=\'block\'>\n  <progress class=\'inline-block\' max=\'100\' value=\'75\'></progress>\n  <span class=\'inline-block\'>At 75%</span>\n</div>\n\n<div class=\'block\'>\n  <progress class=\'inline-block\' max=\'100\' value=\'100\'></progress>\n  <span class=\'inline-block\'>At 100%</span>\n</div>');
              this.h2('Loading Spinners');
              return this.exampleHtml('<span class=\'loading loading-spinner-tiny inline-block\'></span>\n<span class=\'loading loading-spinner-small inline-block\'></span>\n<span class=\'loading loading-spinner-medium inline-block\'></span>\n<span class=\'loading loading-spinner-large inline-block\'></span>');
            });
          });
        };
      })(this));
    };

    StyleguideView.deserialize = function(options) {
      if (options == null) {
        options = {};
      }
      return new StyleguideView(options);
    };

    StyleguideView.exampleSections = {};

    StyleguideView.exampleSection = function(name, title, buildFn) {
      return this.exampleSections[name] = ExampleSection.build(this, name, title, buildFn);
    };

    StyleguideView.prototype.initialize = function(arg) {
      var __, collapsedSections, ref1, ref2, section;
      ref1 = arg != null ? arg : {}, this.uri = ref1.uri, collapsedSections = ref1.collapsedSections;
      this.on('click', '.section-heading', function() {
        return StyleguideView.exampleSections[$(this).parent().attr('data-name')].toggle();
      });
      this.on('click', '.example-code .btn-group .btn', function() {
        var btn, clas, example;
        btn = $(this);
        example = btn.parents('.example-code');
        clas = btn.attr('data-display-class');
        example.find('.btn').removeClass('selected');
        example.removeClass('show-example-html show-example-space-pen');
        example.addClass(clas);
        return btn.addClass('selected');
      });
      this.collapseAllButton.click(this.collapseAllSections);
      this.expandAllButton.click(this.expandAllSections);
      ref2 = StyleguideView.exampleSections;
      for (__ in ref2) {
        section = ref2[__];
        this.styleguideSections.append(section.el);
      }
      return this.setCollapsedSections(collapsedSections);
    };

    StyleguideView.prototype.serialize = function() {
      return {
        deserializer: this.constructor.name,
        collapsedSections: this.getCollapsedSections(),
        uri: this.getURI()
      };
    };

    StyleguideView.prototype.getURI = function() {
      return this.uri;
    };

    StyleguideView.prototype.getTitle = function() {
      return "Styleguide";
    };

    StyleguideView.prototype.onDidChangeTitle = function() {
      return new Disposable(function() {});
    };

    StyleguideView.prototype.onDidChangeModified = function() {
      return new Disposable(function() {});
    };

    StyleguideView.prototype.collapseAllSections = function() {
      var name, ref1, results, section;
      ref1 = StyleguideView.exampleSections;
      results = [];
      for (name in ref1) {
        section = ref1[name];
        if (name === 'styleguide') {
          continue;
        }
        results.push(section.collapse());
      }
      return results;
    };

    StyleguideView.prototype.expandAllSections = function() {
      var name, ref1, results, section;
      ref1 = StyleguideView.exampleSections;
      results = [];
      for (name in ref1) {
        section = ref1[name];
        if (name === 'styleguide') {
          continue;
        }
        results.push(section.expand());
      }
      return results;
    };

    StyleguideView.prototype.getCollapsedSections = function() {
      var i, len, ref1, results, sec;
      ref1 = this.find('section.collapsed');
      results = [];
      for (i = 0, len = ref1.length; i < len; i++) {
        sec = ref1[i];
        results.push($(sec).attr('data-name'));
      }
      return results;
    };

    StyleguideView.prototype.setCollapsedSections = function(collapsedSections) {
      var name, ref1, section;
      if (collapsedSections == null) {
        collapsedSections = [];
      }
      ref1 = StyleguideView.exampleSections;
      for (name in ref1) {
        section = ref1[name];
        if (indexOf.call(collapsedSections, name) < 0) {
          section.expand();
        }
      }
      return null;
    };

    StyleguideView.prototype.isEqual = function(other) {
      return other instanceof StyleguideView;
    };

    return StyleguideView;

  })(ScrollView);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiL3RtcC95YW91cnQtdG1wLW1pY2hhZWwvYXVyLWF0b20tZWRpdG9yLWdpdC9zcmMvYXRvbS9vdXQvYXBwL25vZGVfbW9kdWxlcy9zdHlsZWd1aWRlL2xpYi9zdHlsZWd1aWRlLXZpZXcuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsTUFBQSw4REFBQTtJQUFBOzs7O0VBQUMsYUFBYyxPQUFBLENBQVEsTUFBUjs7RUFDZixNQUFrQixPQUFBLENBQVEsc0JBQVIsQ0FBbEIsRUFBQyxTQUFELEVBQUk7O0VBRUosT0FBQSxDQUFRLHdCQUFSOztFQUNBLGNBQUEsR0FBaUIsT0FBQSxDQUFRLG1CQUFSOztFQUVqQixNQUFNLENBQUMsT0FBUCxHQUNNOzs7Ozs7O0lBQ0osY0FBQyxDQUFBLE9BQUQsR0FBVSxTQUFBO2FBQ1IsSUFBQyxDQUFBLEdBQUQsQ0FBSztRQUFBLENBQUEsS0FBQSxDQUFBLEVBQU8sMENBQVA7UUFBbUQsUUFBQSxFQUFVLENBQUMsQ0FBOUQ7T0FBTCxFQUFzRSxDQUFBLFNBQUEsS0FBQTtlQUFBLFNBQUE7VUFDcEUsS0FBQyxDQUFBLE1BQUQsQ0FBUTtZQUFBLENBQUEsS0FBQSxDQUFBLEVBQU8sbUJBQVA7V0FBUixFQUFvQyxTQUFBO1lBQ2xDLEtBQUMsQ0FBQSxFQUFELENBQUksWUFBSjtZQUNBLEtBQUMsQ0FBQSxDQUFELENBQUcsNERBQUg7bUJBRUEsS0FBQyxDQUFBLEdBQUQsQ0FBSztjQUFBLENBQUEsS0FBQSxDQUFBLEVBQU8sK0JBQVA7YUFBTCxFQUE2QyxTQUFBO2NBQzNDLEtBQUMsQ0FBQSxNQUFELENBQVE7Z0JBQUEsTUFBQSxFQUFRLG1CQUFSO2dCQUE2QixDQUFBLEtBQUEsQ0FBQSxFQUFPLEtBQXBDO2VBQVIsRUFBbUQsY0FBbkQ7cUJBQ0EsS0FBQyxDQUFBLE1BQUQsQ0FBUTtnQkFBQSxNQUFBLEVBQVEsaUJBQVI7Z0JBQTJCLENBQUEsS0FBQSxD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QSxVQUFBLENBQVcsU0FBQSxHQUFBLENBQVg7SUFBUDs7NkJBRXJCLG1CQUFBLEdBQXFCLFNBQUE7QUFDbkIsVUFBQTtBQUFBO0FBQUE7V0FBQSxZQUFBOztRQUNFLElBQVksSUFBQSxLQUFRLFlBQXBCO0FBQUEsbUJBQUE7O3FCQUNBLE9BQU8sQ0FBQyxRQUFSLENBQUE7QUFGRjs7SUFEbUI7OzZCQUtyQixpQkFBQSxHQUFtQixTQUFBO0FBQ2pCLFVBQUE7QUFBQTtBQUFBO1dBQUEsWUFBQTs7UUFDRSxJQUFZLElBQUEsS0FBUSxZQUFwQjtBQUFBLG1CQUFBOztxQkFDQSxPQUFPLENBQUMsTUFBUixDQUFBO0FBRkY7O0lBRGlCOzs2QkFLbkIsb0JBQUEsR0FBc0IsU0FBQTtBQUNwQixVQUFBO0FBQUE7QUFBQTtXQUFBLHNDQUFBOztxQkFBQSxDQUFBLENBQUUsR0FBRixDQUFNLENBQUMsSUFBUCxDQUFZLFdBQVo7QUFBQTs7SUFEb0I7OzZCQUd0QixvQkFBQSxHQUFzQixTQUFDLGlCQUFEO0FBQ3BCLFVBQUE7O1FBRHFCLG9CQUFrQjs7QUFDdkM7QUFBQSxXQUFBLFlBQUE7O1FBQ0UsSUFBb0IsYUFBWSxpQkFBWixFQUFBLElBQUEsS0FBcEI7VUFBQSxPQUFPLENBQUMsTUFBUixDQUFBLEVBQUE7O0FBREY7YUFFQTtJQUhvQjs7NkJBS3RCLE9BQUEsR0FBUyxTQUFDLEtBQUQ7YUFDUCxLQUFBLFlBQWlCO0lBRFY7Ozs7S0FydENrQjtBQVA3QiIsInNvdXJjZXNDb250ZW50IjpbIntEaXNwb3NhYmxlfSA9IHJlcXVpcmUgJ2F0b20nXG57JCwgU2Nyb2xsVmlld30gPSByZXF1aXJlICdhdG9tLXNwYWNlLXBlbi12aWV3cydcblxucmVxdWlyZSAnLi9zcGFjZS1wZW4tZXh0ZW5zaW9ucydcbkV4YW1wbGVTZWN0aW9uID0gcmVxdWlyZSAnLi9leGFtcGxlLXNlY3Rpb24nXG5cbm1vZHVsZS5leHBvcnRzID1cbmNsYXNzIFN0eWxlZ3VpZGVWaWV3IGV4dGVuZHMgU2Nyb2xsVmlld1xuICBAY29udGVudDogLT5cbiAgICBAZGl2IGNsYXNzOiAnc3R5bGVndWlkZSBwYW5lLWl0ZW0gbmF0aXZlLWtleS1iaW5kaW5ncycsIHRhYmluZGV4OiAtMSwgPT5cbiAgICAgIEBoZWFkZXIgY2xhc3M6ICdzdHlsZWd1aWRlLWhlYWRlcicsID0+XG4gICAgICAgIEBoMSAnU3R5bGVndWlkZSdcbiAgICAgICAgQHAgJ1RoaXMgZXhlcmNpc2VzIGFsbCBVSSBjb21wb25lbnRzIGFuZCBhY3RzIGFzIGEgc3R5bGVndWlkZS4nXG5cbiAgICAgICAgQGRpdiBjbGFzczogJ3N0eWxlZ3VpZGUtY29udHJvbHMgYnRuLWdyb3VwJywgPT5cbiAgICAgICAgICBAYnV0dG9uIG91dGxldDogJ2NvbGxhcHNlQWxsQnV0dG9uJywgY2xhc3M6ICdidG4nLCAnQ29sbGFwc2UgQWxsJ1xuICAgICAgICAgIEBidXR0b24gb3V0bGV0OiAnZXhwYW5kQWxsQnV0dG9uJywgY2xhc3M6ICdidG4nLCAnRXhwYW5kIEFsbCdcblxuICAgICAgQG1haW4gb3V0bGV0OiAnc3R5bGVndWlkZVNlY3Rpb25zJywgY2xhc3M6ICdzdHlsZWd1aWRlLXNlY3Rpb25zJywgPT5cblxuICAgICAgICAjIEZvbGQgYXQgaW5kZW50IGxldmVsIDUgLT4gYGNtZC1rIGNtZC01YFxuICAgICAgICBAZXhhbXBsZVNlY3Rpb24gJ3ZhcmlhYmxlcycsICdWYXJpYWJsZXMnLCAtPlxuICAgICAgICAgIEBwID0+IEByYXcgJycnVXNlIHRoZXNlIFVJIHZhcmlhYmxlcyBpbiB5b3VyIHBhY2thZ2UncyBzdHlsZXNoZWV0cy4gVGhleSBhcmUgc2V0IGJ5IFVJIHRoZW1lcyBhbmQgdGhlcmVmb3JlIHlvdXIgcGFja2FnZSB3aWxsIG1hdGNoIHRoZSBvdmVyYWxsIGxvb2suIE1ha2Ugc3VyZSB0byBAaW1wb3J0ICd1aS12YXJpYWJsZXMnIGluIHlvdXIgc3R5bGVzaGVldHMgdG8gdXNlIHRoZXNlIHZhcmlhYmxlcy4nJydcblxuICAgICAgICAgIEBoMiAnVGV4dCBjb2xvcnMnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIHRleHQtY29sb3JcIj5AdGV4dC1jb2xvcjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIHRleHQtY29sb3Itc3VidGxlXCI+QHRleHQtY29sb3Itc3VidGxlPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3IgdGV4dC1jb2xvci1oaWdobGlnaHRcIj5AdGV4dC1jb2xvci1oaWdobGlnaHQ8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvciB0ZXh0LWNvbG9yLXNlbGVjdGVkXCI+QHRleHQtY29sb3Itc2VsZWN0ZWQ8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvclwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIHRleHQtY29sb3ItaW5mb1wiPkB0ZXh0LWNvbG9yLWluZm88L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvciB0ZXh0LWNvbG9yLXN1Y2Nlc3NcIj5AdGV4dC1jb2xvci1zdWNjZXNzPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3IgdGV4dC1jb2xvci13YXJuaW5nXCI+QHRleHQtY29sb3Itd2FybmluZzwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIHRleHQtY29sb3ItZXJyb3JcIj5AdGV4dC1jb2xvci1lcnJvcjwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICdCYWNrZ3JvdW5kIGNvbG9ycydcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3IgYmFja2dyb3VuZC1jb2xvci1pbmZvXCI+QGJhY2tncm91bmQtY29sb3ItaW5mbzwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIGJhY2tncm91bmQtY29sb3Itc3VjY2Vzc1wiPkBiYWNrZ3JvdW5kLWNvbG9yLXN1Y2Nlc3M8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvciBiYWNrZ3JvdW5kLWNvbG9yLXdhcm5pbmdcIj5AYmFja2dyb3VuZC1jb2xvci13YXJuaW5nPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3IgYmFja2dyb3VuZC1jb2xvci1lcnJvclwiPkBiYWNrZ3JvdW5kLWNvbG9yLWVycm9yPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3JcIj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvciBiYWNrZ3JvdW5kLWNvbG9yLWhpZ2hsaWdodFwiPkBiYWNrZ3JvdW5kLWNvbG9yLWhpZ2hsaWdodDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIGJhY2tncm91bmQtY29sb3Itc2VsZWN0ZWRcIj5AYmFja2dyb3VuZC1jb2xvci1zZWxlY3RlZDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIGFwcC1iYWNrZ3JvdW5kLWNvbG9yXCI+QGFwcC1iYWNrZ3JvdW5kLWNvbG9yPC9kaXY+XG4gICAgICAgICAgJycnXG5cbiAgICAgICAgICBAaDIgJ0Jhc2UgY29sb3JzJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvciBiYXNlLWJhY2tncm91bmQtY29sb3JcIj5AYmFzZS1iYWNrZ3JvdW5kLWNvbG9yPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3IgYmFzZS1ib3JkZXItY29sb3JcIj5AYmFzZS1ib3JkZXItY29sb3I8L2Rpdj5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBoMiAnQ29tcG9uZW50IGNvbG9ycydcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3IgcGFuZS1pdGVtLWJhY2tncm91bmQtY29sb3JcIj5AcGFuZS1pdGVtLWJhY2tncm91bmQtY29sb3I8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvciBwYW5lLWl0ZW0tYm9yZGVyLWNvbG9yXCI+QHBhbmUtaXRlbS1ib3JkZXItY29sb3I8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvclwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIGlucHV0LWJhY2tncm91bmQtY29sb3JcIj5AaW5wdXQtYmFja2dyb3VuZC1jb2xvcjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIGlucHV0LWJvcmRlci1jb2xvclwiPkBpbnB1dC1ib3JkZXItY29sb3I8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvclwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIHRvb2wtcGFuZWwtYmFja2dyb3VuZC1jb2xvclwiPkB0b29sLXBhbmVsLWJhY2tncm91bmQtY29sb3I8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvciB0b29sLXBhbmVsLWJvcmRlci1jb2xvclwiPkB0b29sLXBhbmVsLWJvcmRlci1jb2xvcjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIGluc2V0LXBhbmVsLWJhY2tncm91bmQtY29sb3JcIj5AaW5zZXQtcGFuZWwtYmFja2dyb3VuZC1jb2xvcjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIGluc2V0LXBhbmVsLWJvcmRlci1jb2xvclwiPkBpbnNldC1wYW5lbC1ib3JkZXItY29sb3I8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvciBwYW5lbC1oZWFkaW5nLWJhY2tncm91bmQtY29sb3JcIj5AcGFuZWwtaGVhZGluZy1iYWNrZ3JvdW5kLWNvbG9yPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3IgcGFuZWwtaGVhZGluZy1ib3JkZXItY29sb3JcIj5AcGFuZWwtaGVhZGluZy1ib3JkZXItY29sb3I8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvciBvdmVybGF5LWJhY2tncm91bmQtY29sb3JcIj5Ab3ZlcmxheS1iYWNrZ3JvdW5kLWNvbG9yPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3Igb3ZlcmxheS1ib3JkZXItY29sb3JcIj5Ab3ZlcmxheS1ib3JkZXItY29sb3I8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvclwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIGJ1dHRvbi1iYWNrZ3JvdW5kLWNvbG9yXCI+QGJ1dHRvbi1iYWNrZ3JvdW5kLWNvbG9yPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3IgYnV0dG9uLWJhY2tncm91bmQtY29sb3ItaG92ZXJcIj5AYnV0dG9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvciBidXR0b24tYmFja2dyb3VuZC1jb2xvci1zZWxlY3RlZFwiPkBidXR0b24tYmFja2dyb3VuZC1jb2xvci1zZWxlY3RlZDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIGJ1dHRvbi1ib3JkZXItY29sb3JcIj5AYnV0dG9uLWJvcmRlci1jb2xvcjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbG9yXCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3IgdGFiLWJhci1iYWNrZ3JvdW5kLWNvbG9yXCI+QHRhYi1iYXItYmFja2dyb3VuZC1jb2xvcjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIHRhYi1iYXItYm9yZGVyLWNvbG9yXCI+QHRhYi1iYXItYm9yZGVyLWNvbG9yPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3IgdGFiLWJhY2tncm91bmQtY29sb3JcIj5AdGFiLWJhY2tncm91bmQtY29sb3I8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvciB0YWItYmFja2dyb3VuZC1jb2xvci1hY3RpdmVcIj5AdGFiLWJhY2tncm91bmQtY29sb3ItYWN0aXZlPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3IgdGFiLWJvcmRlci1jb2xvclwiPkB0YWItYm9yZGVyLWNvbG9yPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3JcIj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvciB0cmVlLXZpZXctYmFja2dyb3VuZC1jb2xvclwiPkB0cmVlLXZpZXctYmFja2dyb3VuZC1jb2xvcjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIHRyZWUtdmlldy1ib3JkZXItY29sb3JcIj5AdHJlZS12aWV3LWJvcmRlci1jb2xvcjwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICdTaXRlIGNvbG9ycydcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3IgdWktc2l0ZS1jb2xvci0xXCI+QHVpLXNpdGUtY29sb3ItMTwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIHVpLXNpdGUtY29sb3ItMlwiPkB1aS1zaXRlLWNvbG9yLTI8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1jb2xvciB1aS1zaXRlLWNvbG9yLTNcIj5AdWktc2l0ZS1jb2xvci0zPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtY29sb3IgdWktc2l0ZS1jb2xvci00XCI+QHVpLXNpdGUtY29sb3ItNDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLWNvbG9yIHVpLXNpdGUtY29sb3ItNVwiPkB1aS1zaXRlLWNvbG9yLTU8L2Rpdj5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBoMiAnU2l6ZXMnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLXNpemUgZGlzY2xvc3VyZS1hcnJvdy1zaXplXCI+QGRpc2Nsb3N1cmUtYXJyb3ctc2l6ZTwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLXNpemUgY29tcG9uZW50LXBhZGRpbmdcIj5AY29tcG9uZW50LXBhZGRpbmc8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1zaXplIGNvbXBvbmVudC1pY29uLXBhZGRpbmdcIj5AY29tcG9uZW50LWljb24tcGFkZGluZzwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlzLXNpemUgY29tcG9uZW50LWljb24tc2l6ZVwiPkBjb21wb25lbnQtaWNvbi1zaXplPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtc2l6ZSBjb21wb25lbnQtbGluZS1oZWlnaHRcIj5AY29tcG9uZW50LWxpbmUtaGVpZ2h0PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtc2l6ZSB0YWItaGVpZ2h0XCI+QHRhYi1oZWlnaHQ8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1zaXplIGZvbnQtc2l6ZVwiPkBmb250LXNpemU8L2Rpdj5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBoMiAnTWlzYydcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtcmFkaXVzIGNvbXBvbmVudC1ib3JkZXItcmFkaXVzXCI+QGNvbXBvbmVudC1ib3JkZXItcmFkaXVzPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXMtZm9udCBmb250LWZhbWlseVwiPkBmb250LWZhbWlseTwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgIEBleGFtcGxlU2VjdGlvbiAnaWNvbnMnLCAnSWNvbnMnLCAtPlxuICAgICAgICAgIEBwID0+IEByYXcgXCJBdG9tIGNvbWVzIGJ1bmRsZWQgd2l0aCB0aGUgT2N0aWNvbnMuIEl0IGxldHMgeW91IGVhc2lseSBhZGQgaWNvbnMgdG8geW91ciBwYWNrYWdlcy5cIlxuXG4gICAgICAgICAgQHAgPT4gQHJhdyAnQ3VycmVudGx5IHZlcnNpb24gPGNvZGU+NC40LjA8L2NvZGU+IGlzIGF2YWlsYWJsZS4gSW4gYWRkaXRpb24gc29tZSBvbGRlciBpY29ucyBmcm9tIHZlcnNpb24gPGNvZGU+Mi4xLjI8L2NvZGU+IGFyZSBzdGlsbCBrZXB0IGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eS4gTWFrZSBzdXJlIHRvIHVzZSB0aGUgPGNvZGU+aWNvbiBpY29uLTwvY29kZT4gcHJlZml4IGluIGZyb250IG9mIGFuIGljb24gbmFtZS4gU2VlIHRoZSA8YSBocmVmPVwiaHR0cDovL2ZsaWdodC1tYW51YWwuYXRvbS5pby9oYWNraW5nLWF0b20vc2VjdGlvbnMvaWNvbm9ncmFwaHkvXCI+ZG9jdW1lbnRhdGlvbjwvYT4gZm9yIG1vcmUgZGV0YWlscy4nXG5cbiAgICAgICAgICBAaDIgJ09jdGljb25zJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tYWxlcnQgbmF0aXZlLWtleS1iaW5kaW5ncyc+YWxlcnQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWFsaWdubWVudC1hbGlnbic+YWxpZ25tZW50LWFsaWduPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1hbGlnbm1lbnQtYWxpZ25lZC10byc+YWxpZ25tZW50LWFsaWduZWQtdG88L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWFsaWdubWVudC11bmFsaWduJz5hbGlnbm1lbnQtdW5hbGlnbjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tYXJyb3ctZG93bic+YXJyb3ctZG93bjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tYXJyb3ctbGVmdCc+YXJyb3ctbGVmdDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tYXJyb3ctcmlnaHQnPmFycm93LXJpZ2h0PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1hcnJvdy1zbWFsbC1kb3duJz5hcnJvdy1zbWFsbC1kb3duPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1hcnJvdy1zbWFsbC1sZWZ0Jz5hcnJvdy1zbWFsbC1sZWZ0PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1hcnJvdy1zbWFsbC1yaWdodCc+YXJyb3ctc21hbGwtcmlnaHQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWFycm93LXNtYWxsLXVwJz5hcnJvdy1zbWFsbC11cDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tYXJyb3ctdXAnPmFycm93LXVwPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1iZWFrZXInPmJlYWtlcjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tYmVlcic+YmVlcjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tYmVsbCc+YmVsbDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tYm9sZCc+Ym9sZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tYm9vayc+Ym9vazwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tYm9va21hcmsnPmJvb2ttYXJrPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1icmllZmNhc2UnPmJyaWVmY2FzZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tYnJvYWRjYXN0Jz5icm9hZGNhc3Q8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWJyb3dzZXInPmJyb3dzZXI8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWJ1Zyc+YnVnPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1jYWxlbmRhcic+Y2FsZW5kYXI8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWNoZWNrJz5jaGVjazwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tY2hlY2tsaXN0Jz5jaGVja2xpc3Q8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWNoZXZyb24tZG93bic+Y2hldnJvbi1kb3duPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1jaGV2cm9uLWxlZnQnPmNoZXZyb24tbGVmdDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tY2hldnJvbi1yaWdodCc+Y2hldnJvbi1yaWdodDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tY2hldnJvbi11cCc+Y2hldnJvbi11cDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tY2lyY2xlLXNsYXNoJz5jaXJjbGUtc2xhc2g8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWNpcmN1aXQtYm9hcmQnPmNpcmN1aXQtYm9hcmQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWNsaXBweSc+Y2xpcHB5PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1jbG9jayc+Y2xvY2s8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWNsb3VkLWRvd25sb2FkJz5jbG91ZC1kb3dubG9hZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tY2xvdWQtdXBsb2FkJz5jbG91ZC11cGxvYWQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWNvZGUnPmNvZGU8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWNvbG9yLW1vZGUnPmNvbG9yLW1vZGU8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWNvbW1lbnQnPmNvbW1lbnQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWNvbW1lbnQtYWRkJz5jb21tZW50LWFkZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tY29tbWVudC1kaXNjdXNzaW9uJz5jb21tZW50LWRpc2N1c3Npb248L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWNyZWRpdC1jYXJkJz5jcmVkaXQtY2FyZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZGFzaCc+ZGFzaDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZGFzaGJvYXJkJz5kYXNoYm9hcmQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWRhdGFiYXNlJz5kYXRhYmFzZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZGVza3RvcC1kb3dubG9hZCc+ZGVza3RvcC1kb3dubG9hZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZGV2aWNlLWNhbWVyYSc+ZGV2aWNlLWNhbWVyYTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZGV2aWNlLWNhbWVyYS12aWRlbyc+ZGV2aWNlLWNhbWVyYS12aWRlbzwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZGV2aWNlLWRlc2t0b3AnPmRldmljZS1kZXNrdG9wPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1kZXZpY2UtbW9iaWxlJz5kZXZpY2UtbW9iaWxlPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1kaWZmJz5kaWZmPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1kaWZmLWFkZGVkJz5kaWZmLWFkZGVkPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1kaWZmLWlnbm9yZWQnPmRpZmYtaWdub3JlZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZGlmZi1tb2RpZmllZCc+ZGlmZi1tb2RpZmllZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZGlmZi1yZW1vdmVkJz5kaWZmLXJlbW92ZWQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWRpZmYtcmVuYW1lZCc+ZGlmZi1yZW5hbWVkPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1lbGxpcHNlcyc+ZWxsaXBzZXM8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWVsbGlwc2lzJz5lbGxpcHNpczwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZXllJz5leWU8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWV5ZS11bndhdGNoJz5leWUtdW53YXRjaDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZXllLXdhdGNoJz5leWUtd2F0Y2g8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWZpbGUnPmZpbGU8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWZpbGUtYWRkJz5maWxlLWFkZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS1iaW5hcnknPmZpbGUtYmluYXJ5PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLWNvZGUnPmZpbGUtY29kZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS1kaXJlY3RvcnknPmZpbGUtZGlyZWN0b3J5PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLWRpcmVjdG9yeS1jcmVhdGUnPmZpbGUtZGlyZWN0b3J5LWNyZWF0ZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS1tZWRpYSc+ZmlsZS1tZWRpYTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS1wZGYnPmZpbGUtcGRmPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLXN1Ym1vZHVsZSc+ZmlsZS1zdWJtb2R1bGU8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWZpbGUtc3ltbGluay1kaXJlY3RvcnknPmZpbGUtc3ltbGluay1kaXJlY3Rvcnk8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWZpbGUtc3ltbGluay1maWxlJz5maWxlLXN5bWxpbmstZmlsZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS10ZXh0Jz5maWxlLXRleHQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWZpbGUtemlwJz5maWxlLXppcDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmxhbWUnPmZsYW1lPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1mb2xkJz5mb2xkPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1nZWFyJz5nZWFyPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1naWZ0Jz5naWZ0PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1naXN0Jz5naXN0PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1naXN0LWZvcmsnPmdpc3QtZm9yazwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZ2lzdC1uZXcnPmdpc3QtbmV3PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1naXN0LXByaXZhdGUnPmdpc3QtcHJpdmF0ZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZ2lzdC1zZWNyZXQnPmdpc3Qtc2VjcmV0PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1naXQtYnJhbmNoJz5naXQtYnJhbmNoPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1naXQtYnJhbmNoLWNyZWF0ZSc+Z2l0LWJyYW5jaC1jcmVhdGU8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWdpdC1icmFuY2gtZGVsZXRlJz5naXQtYnJhbmNoLWRlbGV0ZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZ2l0LWNvbW1pdCc+Z2l0LWNvbW1pdDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZ2l0LWNvbXBhcmUnPmdpdC1jb21wYXJlPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1naXQtZm9yay1wcml2YXRlJz5naXQtZm9yay1wcml2YXRlPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1naXQtbWVyZ2UnPmdpdC1tZXJnZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZ2l0LXB1bGwtcmVxdWVzdCc+Z2l0LXB1bGwtcmVxdWVzdDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZ2l0LXB1bGwtcmVxdWVzdC1hYmFuZG9uZWQnPmdpdC1wdWxsLXJlcXVlc3QtYWJhbmRvbmVkPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1nbG9iZSc+Z2xvYmU8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWdyYWJiZXInPmdyYWJiZXI8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWdyYXBoJz5ncmFwaDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24taGVhcnQnPmhlYXJ0PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1oaXN0b3J5Jz5oaXN0b3J5PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1ob21lJz5ob21lPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1ob3Jpem9udGFsLXJ1bGUnPmhvcml6b250YWwtcnVsZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24taG91cmdsYXNzJz5ob3VyZ2xhc3M8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWh1Ym90Jz5odWJvdDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24taW5ib3gnPmluYm94PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1pbmZvJz5pbmZvPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1pc3N1ZS1jbG9zZWQnPmlzc3VlLWNsb3NlZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24taXNzdWUtb3BlbmVkJz5pc3N1ZS1vcGVuZWQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWlzc3VlLXJlb3BlbmVkJz5pc3N1ZS1yZW9wZW5lZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24taXRhbGljJz5pdGFsaWM8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWplcnNleSc+amVyc2V5PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1qdW1wLWRvd24nPmp1bXAtZG93bjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tanVtcC1sZWZ0Jz5qdW1wLWxlZnQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWp1bXAtcmlnaHQnPmp1bXAtcmlnaHQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWp1bXAtdXAnPmp1bXAtdXA8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWtleSc+a2V5PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1rZXlib2FyZCc+a2V5Ym9hcmQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWxhdyc+bGF3PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1saWdodC1idWxiJz5saWdodC1idWxiPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1saW5rJz5saW5rPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1saW5rLWV4dGVybmFsJz5saW5rLWV4dGVybmFsPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1saXN0LW9yZGVyZWQnPmxpc3Qtb3JkZXJlZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tbGlzdC11bm9yZGVyZWQnPmxpc3QtdW5vcmRlcmVkPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1sb2NhdGlvbic+bG9jYXRpb248L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWxvY2snPmxvY2s8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWxvZy1pbic+bG9nLWluPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1sb2ctb3V0Jz5sb2ctb3V0PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1sb2dvLWdpc3QnPmxvZ28tZ2lzdDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tbG9nby1naXRodWInPmxvZ28tZ2l0aHViPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1tYWlsJz5tYWlsPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1tYWlsLXJlYWQnPm1haWwtcmVhZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tbWFpbC1yZXBseSc+bWFpbC1yZXBseTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tbWFyay1naXRodWInPm1hcmstZ2l0aHViPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1tYXJrZG93bic+bWFya2Rvd248L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLW1lZ2FwaG9uZSc+bWVnYXBob25lPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1tZW50aW9uJz5tZW50aW9uPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1taWNyb3Njb3BlJz5taWNyb3Njb3BlPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1taWxlc3RvbmUnPm1pbGVzdG9uZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tbWlycm9yJz5taXJyb3I8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLW1pcnJvci1wcml2YXRlJz5taXJyb3ItcHJpdmF0ZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tbWlycm9yLXB1YmxpYyc+bWlycm9yLXB1YmxpYzwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tbW9ydGFyLWJvYXJkJz5tb3J0YXItYm9hcmQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLW1vdmUtZG93bic+bW92ZS1kb3duPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1tb3ZlLWxlZnQnPm1vdmUtbGVmdDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tbW92ZS1yaWdodCc+bW92ZS1yaWdodDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tbW92ZS11cCc+bW92ZS11cDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tbXV0ZSc+bXV0ZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tbm8tbmV3bGluZSc+bm8tbmV3bGluZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tb2N0b2ZhY2UnPm9jdG9mYWNlPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1vcmdhbml6YXRpb24nPm9yZ2FuaXphdGlvbjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcGFja2FnZSc+cGFja2FnZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcGFpbnRjYW4nPnBhaW50Y2FuPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1wZW5jaWwnPnBlbmNpbDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcGVyc29uJz5wZXJzb248L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXBlcnNvbi1hZGQnPnBlcnNvbi1hZGQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXBlcnNvbi1mb2xsb3cnPnBlcnNvbi1mb2xsb3c8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXBpbic+cGluPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1wbGF5YmFjay1mYXN0LWZvcndhcmQnPnBsYXliYWNrLWZhc3QtZm9yd2FyZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcGxheWJhY2stcGF1c2UnPnBsYXliYWNrLXBhdXNlPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1wbGF5YmFjay1wbGF5Jz5wbGF5YmFjay1wbGF5PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1wbGF5YmFjay1yZXdpbmQnPnBsYXliYWNrLXJld2luZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcGx1Zyc+cGx1Zzwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcGx1cy1zbWFsbCc+cGx1cy1zbWFsbDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcGx1cyc+cGx1czwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcG9kaXVtJz5wb2RpdW08L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXByaW1pdGl2ZS1kb3QnPnByaW1pdGl2ZS1kb3Q8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXByaW1pdGl2ZS1zcXVhcmUnPnByaW1pdGl2ZS1zcXVhcmU8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXB1bHNlJz5wdWxzZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcHV6emxlJz5wdXp6bGU8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXF1ZXN0aW9uJz5xdWVzdGlvbjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcXVvdGUnPnF1b3RlPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1yYWRpby10b3dlcic+cmFkaW8tdG93ZXI8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXJlbW92ZS1jbG9zZSc+cmVtb3ZlLWNsb3NlPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1yZXBseSc+cmVwbHk8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXJlcG8nPnJlcG88L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXJlcG8tY2xvbmUnPnJlcG8tY2xvbmU8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXJlcG8tY3JlYXRlJz5yZXBvLWNyZWF0ZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcmVwby1kZWxldGUnPnJlcG8tZGVsZXRlPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1yZXBvLWZvcmNlLXB1c2gnPnJlcG8tZm9yY2UtcHVzaDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcmVwby1mb3JrZWQnPnJlcG8tZm9ya2VkPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1yZXBvLXB1bGwnPnJlcG8tcHVsbDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcmVwby1wdXNoJz5yZXBvLXB1c2g8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXJlcG8tc3luYyc+cmVwby1zeW5jPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1yb2NrZXQnPnJvY2tldDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tcnNzJz5yc3M8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXJ1YnknPnJ1Ynk8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXNjcmVlbi1mdWxsJz5zY3JlZW4tZnVsbDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tc2NyZWVuLW5vcm1hbCc+c2NyZWVuLW5vcm1hbDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tc2VhcmNoJz5zZWFyY2g8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXNlYXJjaC1zYXZlJz5zZWFyY2gtc2F2ZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tc2VydmVyJz5zZXJ2ZXI8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXNldHRpbmdzJz5zZXR0aW5nczwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tc2hpZWxkJz5zaGllbGQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXNpZ24taW4nPnNpZ24taW48L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXNpZ24tb3V0Jz5zaWduLW91dDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tc21pbGV5Jz5zbWlsZXk8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXNwbGl0Jz5zcGxpdDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tc3F1aXJyZWwnPnNxdWlycmVsPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1zdGFyJz5zdGFyPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1zdGFyLWFkZCc+c3Rhci1hZGQ8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXN0YXItZGVsZXRlJz5zdGFyLWRlbGV0ZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tc3RlcHMnPnN0ZXBzPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1zdG9wJz5zdG9wPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1zeW5jJz5zeW5jPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi10YWcnPnRhZzwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tdGFnLWFkZCc+dGFnLWFkZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tdGFnLXJlbW92ZSc+dGFnLXJlbW92ZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tdGFza2xpc3QnPnRhc2tsaXN0PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi10ZWxlc2NvcGUnPnRlbGVzY29wZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tdGVybWluYWwnPnRlcm1pbmFsPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi10ZXh0LXNpemUnPnRleHQtc2l6ZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tdGhyZWUtYmFycyc+dGhyZWUtYmFyczwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tdGh1bWJzZG93bic+dGh1bWJzZG93bjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tdGh1bWJzdXAnPnRodW1ic3VwPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi10b29scyc+dG9vbHM8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXRyYXNoY2FuJz50cmFzaGNhbjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tdHJpYW5nbGUtZG93bic+dHJpYW5nbGUtZG93bjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tdHJpYW5nbGUtbGVmdCc+dHJpYW5nbGUtbGVmdDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tdHJpYW5nbGUtcmlnaHQnPnRyaWFuZ2xlLXJpZ2h0PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi10cmlhbmdsZS11cCc+dHJpYW5nbGUtdXA8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXVuZm9sZCc+dW5mb2xkPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi11bm11dGUnPnVubXV0ZTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tdW52ZXJpZmllZCc+dW52ZXJpZmllZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tdmVyaWZpZWQnPnZlcmlmaWVkPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi12ZXJzaW9ucyc+dmVyc2lvbnM8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLXdhdGNoJz53YXRjaDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24teCc+eDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24temFwJz56YXA8L3NwYW4+XG4gICAgICAgICAgJycnXG5cbiAgICAgICAgQGV4YW1wbGVTZWN0aW9uICdpbnB1dHMnLCAnSW5wdXRzJywgLT5cbiAgICAgICAgICBAcCA9PiBAcmF3ICdWYXJpb3VzIGlucHV0cyBhbmQgY29udHJvbHMuJ1xuXG4gICAgICAgICAgQGgyICdUZXh0IElucHV0cydcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8aW5wdXQgY2xhc3M9J2lucHV0LXRleHQnIHR5cGU9J3RleHQnIHBsYWNlaG9sZGVyPSdUZXh0Jz5cbiAgICAgICAgICAgIDxpbnB1dCBjbGFzcz0naW5wdXQtc2VhcmNoJyB0eXBlPSdzZWFyY2gnIHBsYWNlaG9sZGVyPSdTZWFyY2gnPlxuICAgICAgICAgICAgPHRleHRhcmVhIGNsYXNzPSdpbnB1dC10ZXh0YXJlYScgcGxhY2Vob2xkZXI9J1RleHQgQXJlYSc+PC90ZXh0YXJlYT5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBoMiAnQ29udHJvbHMnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSdpbnB1dC1sYWJlbCc+PGlucHV0IGNsYXNzPSdpbnB1dC1yYWRpbycgdHlwZT0ncmFkaW8nIG5hbWU9J3JhZGlvJz4gUmFkaW88L2xhYmVsPlxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSdpbnB1dC1sYWJlbCc+PGlucHV0IGNsYXNzPSdpbnB1dC1yYWRpbycgdHlwZT0ncmFkaW8nIG5hbWU9J3JhZGlvJyBjaGVja2VkPiBSYWRpbzwvbGFiZWw+XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9J2lucHV0LWxhYmVsJz48aW5wdXQgY2xhc3M9J2lucHV0LWNoZWNrYm94JyB0eXBlPSdjaGVja2JveCcgY2hlY2tlZD4gQ2hlY2tib3g8L2xhYmVsPlxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSdpbnB1dC1sYWJlbCc+PGlucHV0IGNsYXNzPSdpbnB1dC10b2dnbGUnIHR5cGU9J2NoZWNrYm94JyBjaGVja2VkPiBUb2dnbGU8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0IGNsYXNzPSdpbnB1dC1yYW5nZScgdHlwZT0ncmFuZ2UnPlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICdNaXNjJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxpbnB1dCBjbGFzcz0naW5wdXQtY29sb3InIHR5cGU9J2NvbG9yJyB2YWx1ZT0nI0ZGODVGRic+XG4gICAgICAgICAgICA8aW5wdXQgY2xhc3M9J2lucHV0LW51bWJlcicgdHlwZT0nbnVtYmVyJyBtaW49JzEnIG1heD0nMTAnIHBsYWNlaG9sZGVyPScxLTEwJz5cbiAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9J2lucHV0LXNlbGVjdCc+PG9wdGlvbj5PcHRpb24gMTwvb3B0aW9uPjxvcHRpb24+T3B0aW9uIDI8L29wdGlvbj48b3B0aW9uPk9wdGlvbiAzPC9vcHRpb24+PC9zZWxlY3Q+XG4gICAgICAgICAgJycnXG5cbiAgICAgICAgQGV4YW1wbGVTZWN0aW9uICd0ZXh0JywgJ1RleHQnLCAtPlxuICAgICAgICAgIEBwID0+IEByYXcgJ1RoZXJlIGFyZSBhIG51bWJlciBvZiB0ZXh0IGNsYXNzZXMuJ1xuXG4gICAgICAgICAgQGgyICd0ZXh0LSogY2xhc3NlcydcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSd0ZXh0LXNtYWxsZXInPlNtYWxsZXIgdGV4dDwvZGl2PlxuICAgICAgICAgICAgPGRpdj5Ob3JtYWwgdGV4dDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0ndGV4dC1zdWJ0bGUnPlN1YnRsZSB0ZXh0PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSd0ZXh0LWhpZ2hsaWdodCc+SGlnaGxpZ2h0ZWQgdGV4dDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0ndGV4dC1pbmZvJz5JbmZvIHRleHQ8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J3RleHQtc3VjY2Vzcyc+U3VjY2VzcyB0ZXh0PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSd0ZXh0LXdhcm5pbmcnPldhcm5pbmcgdGV4dDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0ndGV4dC1lcnJvcic+RXJyb3IgdGV4dDwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICdoaWdobGlnaHQtKiBjbGFzc2VzJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpbmxpbmUtYmxvY2snPk5vcm1hbDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpbmxpbmUtYmxvY2sgaGlnaGxpZ2h0Jz5IaWdobGlnaHRlZDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpbmxpbmUtYmxvY2sgaGlnaGxpZ2h0LWluZm8nPkluZm88L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naW5saW5lLWJsb2NrIGhpZ2hsaWdodC1zdWNjZXNzJz5TdWNjZXNzPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2lubGluZS1ibG9jayBoaWdobGlnaHQtd2FybmluZyc+V2FybmluZzwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpbmxpbmUtYmxvY2sgaGlnaGxpZ2h0LWVycm9yJz5FcnJvcjwvc3Bhbj5cbiAgICAgICAgICAnJydcblxuICAgICAgICBAZXhhbXBsZVNlY3Rpb24gJ2xheW91dCcsICdMYXlvdXQnLCAtPlxuICAgICAgICAgIEBwID0+IEByYXcgJ0EgZmV3IHRoaW5ncyB0aGF0IG1pZ2h0IGJlIHVzZWZ1bCBmb3IgZ2VuZXJhbCBsYXlvdXQuJ1xuXG4gICAgICAgICAgQGgyICcuYmxvY2snXG4gICAgICAgICAgQHAgJ1NvbWV0aW1lcyB5b3UgbmVlZCB0byBzZXBhcmF0ZSBjb21wb25lbnRzIHZlcnRpY2FsbHkuIFNheSBpbiBhIGZvcm0uJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrJz5cbiAgICAgICAgICAgICAgPGxhYmVsPllvdSBtaWdodCB3YW50IHRvIHR5cGUgc29tZXRoaW5nIGhlcmUuPC9sYWJlbD5cbiAgICAgICAgICAgICAgPGF0b20tdGV4dC1lZGl0b3IgbWluaT5Tb21ldGhpbmcgeW91IHR5cGVkLi4uPC9hdG9tLXRleHQtZWRpdG9yPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSdibG9jayc+XG4gICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0naWNvbiBpY29uLWZpbGUtZGlyZWN0b3J5Jz5Bbm90aGVyIGZpZWxkIHdpdGggYW4gaWNvbjwvbGFiZWw+XG4gICAgICAgICAgICAgIDxhdG9tLXRleHQtZWRpdG9yIG1pbmk+U29tZXRoaW5nIGVsc2UgeW91IHR5cGVkLi4uPC9hdG9tLXRleHQtZWRpdG9yPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSdibG9jayc+XG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0bic+RG8gaXQ8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICcuaW5saW5lLWJsb2NrJ1xuICAgICAgICAgIEBwICdTb21ldGltZXMgeW91IG5lZWQgdG8gc2VwYXJhdGUgY29tcG9uZW50cyBob3Jpem9udGFsbHkuJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrJz5cbiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0naW5saW5lLWJsb2NrIGJ0bic+RG8gaXQ8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0naW5saW5lLWJsb2NrIGJ0bic+QW5vdGhlcjwvYnV0dG9uPlxuICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdpbmxpbmUtYmxvY2sgYnRuJz5PTUcgYWdhaW48L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICcuaW5saW5lLWJsb2NrLXRpZ2h0J1xuICAgICAgICAgIEBwICdZb3UgbWlnaHQgd2FudCB0aGluZ3MgdG8gYmUgYSBsaXR0bGUgY2xvc2VyIHRvIGVhY2ggb3RoZXIuJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrJz5cbiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0naW5saW5lLWJsb2NrLXRpZ2h0IGJ0bic+RG8gaXQ8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0naW5saW5lLWJsb2NrLXRpZ2h0IGJ0bic+QW5vdGhlcjwvYnV0dG9uPlxuICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdpbmxpbmUtYmxvY2stdGlnaHQgYnRuJz5PTUcgYWdhaW48L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgIEBleGFtcGxlU2VjdGlvbiAnZ2l0JywgJ0dpdCBTdGF0dXMnLCAtPlxuICAgICAgICAgIEBwID0+IEByYXcgJ09mdGVuIHdlIG5lZWQgZ2l0IHJlbGF0ZWQgY2xhc3NlcyB0byBzcGVjaWZ5IHN0YXR1cy4nXG5cbiAgICAgICAgICBAaDIgJ3N0YXR1cy0qIGNsYXNzZXMnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGRpdiBjbGFzcz0nc3RhdHVzLWlnbm9yZWQnPklnbm9yZWQ8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J3N0YXR1cy1hZGRlZCc+QWRkZWQ8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J3N0YXR1cy1tb2RpZmllZCc+TW9kaWZpZWQ8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J3N0YXR1cy1yZW1vdmVkJz5SZW1vdmVkPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSdzdGF0dXMtcmVuYW1lZCc+UmVuYW1lZDwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICdzdGF0dXMtKiBjbGFzc2VzIHdpdGggcmVsYXRlZCBpY29ucydcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naW5saW5lLWJsb2NrIHN0YXR1cy1pZ25vcmVkIGljb24gaWNvbi1kaWZmLWlnbm9yZWQnPjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpbmxpbmUtYmxvY2sgc3RhdHVzLWFkZGVkIGljb24gaWNvbi1kaWZmLWFkZGVkJz48L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naW5saW5lLWJsb2NrIHN0YXR1cy1tb2RpZmllZCBpY29uIGljb24tZGlmZi1tb2RpZmllZCc+PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2lubGluZS1ibG9jayBzdGF0dXMtcmVtb3ZlZCBpY29uIGljb24tZGlmZi1yZW1vdmVkJz48L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0naW5saW5lLWJsb2NrIHN0YXR1cy1yZW5hbWVkIGljb24gaWNvbi1kaWZmLXJlbmFtZWQnPjwvc3Bhbj5cbiAgICAgICAgICAnJydcblxuICAgICAgICBAZXhhbXBsZVNlY3Rpb24gJ3NpdGUtaGlnaGxpZ2h0JywgJ1NpdGUgY29sb3JzJywgLT5cbiAgICAgICAgICBAcCA9PiBAcmF3ICdTaXRlIGNvbG9ycyBhcmUgdXNlZCBmb3IgY29sbGFib3JhdGlvbi4gQSBzaXRlIGlzIGFub3RoZXIgY29sbGFib3JhdG9yLidcblxuICAgICAgICAgIEBoMiAndWktc2l0ZS0qIGNsYXNzZXMnXG4gICAgICAgICAgQHAgPT4gQHJhdyAnJydcbiAgICAgICAgICAgIFRoZXNlIGNsYXNzZXMgb25seSBzZXQgdGhlIGJhY2tncm91bmQgY29sb3IsIG5vIG90aGVyIHN0eWxlcy5cbiAgICAgICAgICAgIFlvdSBjYW4gYWxzbyB1c2UgTEVTUyB2YXJpYWJsZXMgPGNvZGU+QHVpLXNpdGUtIzwvY29kZT4gaW4geW91ciBwbHVnaW5zIHdoZXJlXG4gICAgICAgICAgICA8Y29kZT4jPC9jb2RlPiBpcyBhIG51bWJlciBiZXR3ZWVuIDEgYW5kIDUuXG4gICAgICAgICAgJycnXG4gICAgICAgICAgQHAgPT4gQHJhdyAnJydcbiAgICAgICAgICAgIFNpdGUgY29sb3JzIHdpbGwgYWx3YXlzIGJlIGluIHRoZSBjb2xvciBwcm9ncmVzc2lvbiB5b3Ugc2VlIGhlcmUuXG4gICAgICAgICAgJycnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2sgdWktc2l0ZS0xJz48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrIHVpLXNpdGUtMic+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSdibG9jayB1aS1zaXRlLTMnPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2sgdWktc2l0ZS00Jz48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrIHVpLXNpdGUtNSc+PC9kaXY+XG4gICAgICAgICAgJycnXG5cbiAgICAgICAgQGV4YW1wbGVTZWN0aW9uICdiYWRnZXMnLCAnQmFkZ2VzJywgLT5cbiAgICAgICAgICBAcCA9PiBAcmF3ICdCYWRnZXMgYXJlIHR5cGljYWxseSB1c2VkIHRvIHNob3cgbnVtYmVycy4nXG5cbiAgICAgICAgICBAaDIgJ1N0YW5kYWxvbmUgYmFkZ2VzJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrJz5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2JhZGdlJz4wPC9zcGFuPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0nYmFkZ2UnPjg8L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdiYWRnZSc+Mjc8L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdiYWRnZSc+NDUwPC9zcGFuPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0nYmFkZ2UnPjI4Njk8L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBoMiAnQ29sb3JlZCBiYWRnZXMnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2snPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0nYmFkZ2UgYmFkZ2UtaW5mbyc+Nzg8L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdiYWRnZSBiYWRnZS1zdWNjZXNzJz4zPC9zcGFuPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0nYmFkZ2UgYmFkZ2Utd2FybmluZyc+MTQ8L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdiYWRnZSBiYWRnZS1lcnJvcic+MTg0NTwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICdCYWRnZSBzaXplcydcbiAgICAgICAgICBAcCA9PiBAcmF3ICdCeSBkZWZhdWx0IHRoZSA8Y29kZT5AZm9udC1zaXplPC9jb2RlPiB2YXJpYWJsZSBmcm9tIHRoZW1lcyBpcyB1c2VkLiBBZGRpdGlvbmFsbHkgdGhlcmUgYXJlIGFsc28gMyBwcmVkZWZpbmVkIHNpemVzLidcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSdibG9jayc+TGFyZ2UgPHNwYW4gY2xhc3M9J2JhZGdlIGJhZGdlLWxhcmdlJz44PC9zcGFuPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2snPk1lZGl1bSA8c3BhbiBjbGFzcz0nYmFkZ2UgYmFkZ2UtbWVkaXVtJz4yPC9zcGFuPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2snPlNtYWxsIDxzcGFuIGNsYXNzPSdiYWRnZSBiYWRnZS1zbWFsbCc+Nzwvc3Bhbj48L2Rpdj5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBwID0+IEByYXcgJ0lmIHlvdSBsaWtlIHRoZSBzaXplIGNoYW5nZSBkZXBlbmRpbmcgb24gdGhlIHBhcmVudCwgdXNlIHRoZSA8Y29kZT5iYWRnZS1mbGV4aWJsZTwvY29kZT4gY2xhc3MuIE5vdGU6IEJlc3QgdXNlZCBmb3IgbGFyZ2VyIHNpemVzLiBGb3Igc21hbGxlciBzaXplcyBpdCBjb3VsZCBjYXVzZSB0aGUgbnVtYmVyIHRvIGJlIG1pcy1hbGlnbmVkIGJ5IGEgcGl4ZWwuJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxoMSBjbGFzcz0nYmxvY2snPkhlYWRpbmcgPHNwYW4gY2xhc3M9J2JhZGdlIGJhZGdlLWZsZXhpYmxlJz4xPC9zcGFuPjwvaDE+XG4gICAgICAgICAgICA8aDIgY2xhc3M9J2Jsb2NrJz5IZWFkaW5nIDxzcGFuIGNsYXNzPSdiYWRnZSBiYWRnZS1mbGV4aWJsZSc+Mjwvc3Bhbj48L2gyPlxuICAgICAgICAgICAgPGgzIGNsYXNzPSdibG9jayc+SGVhZGluZyA8c3BhbiBjbGFzcz0nYmFkZ2UgYmFkZ2UtZmxleGlibGUnPjM8L3NwYW4+PC9oMz5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBoMiAnSWNvbiBCYWRnZXMnXG4gICAgICAgICAgQHAgPT4gQHJhdyAnU2VlIHRoZSBpY29ucyBzZWN0aW9uIHRvIGdldCBhbiBvdmVydmlldyBvZiBhbGwgT2N0aWNvbnMuJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrJz5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2JhZGdlIGljb24gaWNvbi1nZWFyJz40PC9zcGFuPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0nYmFkZ2UgYmFkZ2UtaW5mbyBpY29uIGljb24tY2xvdWQtZG93bmxvYWQnPjEzPC9zcGFuPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0nYmFkZ2UgYmFkZ2Utc3VjY2VzcyBpY29uIGljb24tb2N0b2ZhY2UnPjU8L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAnJydcblxuICAgICAgICBAZXhhbXBsZVNlY3Rpb24gJ2J1dHRvbnMnLCAnQnV0dG9ucycsIC0+XG4gICAgICAgICAgQHAgPT4gQHJhdyAnQnV0dG9ucyBhcmUgc2ltaWxhciB0byBib290c3RyYXAgYnV0dG9ucydcblxuICAgICAgICAgIEBoMiAnU3RhbmRhbG9uZSBidXR0b25zJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrJz5cbiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuJz5CdXR0b248L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2snPlxuICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4gYnRuLXhzJz5FeHRyYSBTbWFsbCBCdXR0b248L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2snPlxuICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4gYnRuLXNtJz5TbWFsbCBCdXR0b248L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2snPlxuICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4gYnRuLWxnJz5MYXJnZSBCdXR0b248L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICdDb2xvcmVkIGJ1dHRvbnMnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2snPlxuICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4gYnRuLXByaW1hcnkgaW5saW5lLWJsb2NrLXRpZ2h0Jz5QcmltYXJ5PC9idXR0b24+XG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0biBidG4tcHJpbWFyeSBzZWxlY3RlZCBpbmxpbmUtYmxvY2stdGlnaHQnPlNlbGVjdGVkIFByaW1hcnk8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSdibG9jayc+XG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0biBidG4taW5mbyBpbmxpbmUtYmxvY2stdGlnaHQnPkluZm88L2J1dHRvbj5cbiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuIGJ0bi1pbmZvIHNlbGVjdGVkIGlubGluZS1ibG9jay10aWdodCc+U2VsZWN0ZWQgSW5mbzwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrJz5cbiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuIGJ0bi1zdWNjZXNzIGlubGluZS1ibG9jay10aWdodCc+U3VjY2VzczwvYnV0dG9uPlxuICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4gYnRuLXN1Y2Nlc3Mgc2VsZWN0ZWQgaW5saW5lLWJsb2NrLXRpZ2h0Jz5TZWxlY3RlZCBTdWNjZXNzPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2snPlxuICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4gYnRuLXdhcm5pbmcgaW5saW5lLWJsb2NrLXRpZ2h0Jz5XYXJuaW5nPC9idXR0b24+XG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0biBidG4td2FybmluZyBzZWxlY3RlZCBpbmxpbmUtYmxvY2stdGlnaHQnPlNlbGVjdGVkIFdhcm5pbmc8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSdibG9jayc+XG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0biBidG4tZXJyb3IgaW5saW5lLWJsb2NrLXRpZ2h0Jz5FcnJvcjwvYnV0dG9uPlxuICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4gYnRuLWVycm9yIHNlbGVjdGVkIGlubGluZS1ibG9jay10aWdodCc+U2VsZWN0ZWQgRXJyb3I8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICdJY29uIGJ1dHRvbnMnXG4gICAgICAgICAgQHAgPT4gQHJhdyAnT3ZlcnZpZXcgb2YgYWxsIDxhIGhyZWY9XCJodHRwczovL29jdGljb25zLmdpdGh1Yi5jb20vXCI+T2N0aWNvbnM8L2E+LidcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSdibG9jayc+XG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0biBpY29uIGljb24tZ2VhciBpbmxpbmUtYmxvY2stdGlnaHQnPlNldHRpbmdzPC9idXR0b24+XG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0biBidG4tcHJpbWFyeSBpY29uIGljb24tY2xvdWQtZG93bmxvYWQgaW5saW5lLWJsb2NrLXRpZ2h0Jz5JbnN0YWxsPC9idXR0b24+XG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0biBidG4tZXJyb3IgaWNvbiBpY29uLW9jdG9mYWNlIGlubGluZS1ibG9jay10aWdodCc+RGFuZ2VyPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBoMiAnQnV0dG9uIEdyb3VwcydcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSdibG9jayc+XG4gICAgICAgICAgICAgIDxkaXY+Tm9ybWFsIHNpemU8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nYnRuLWdyb3VwJz5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4nPk9uZTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0bic+VHdvPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuJz5UaHJlZTwvYnV0dG9uPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSdibG9jayc+XG4gICAgICAgICAgICAgIDxkaXY+RXh0cmEgU21hbGw8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nYnRuLWdyb3VwIGJ0bi1ncm91cC14cyc+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuJz5PbmU8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4nPlR3bzwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0bic+VGhyZWU8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2snPlxuICAgICAgICAgICAgICA8ZGl2PlNtYWxsPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9J2J0bi1ncm91cCBidG4tZ3JvdXAtc20nPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0bic+T25lPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuJz5Ud288L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4nPlRocmVlPC9idXR0b24+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrJz5cbiAgICAgICAgICAgICAgPGRpdj5MYXJnZTwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdidG4tZ3JvdXAgYnRuLWdyb3VwLWxnJz5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4nPk9uZTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0bic+VHdvPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuJz5UaHJlZTwvYnV0dG9uPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICdCdXR0b24gVG9vbGJhcnMnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYnRuLXRvb2xiYXInPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdidG4tZ3JvdXAnPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0bic+T25lPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuJz5Ud288L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4nPlRocmVlPC9idXR0b24+XG4gICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9J2J0bi1ncm91cCc+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuJz5Gb3VyPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuJz5GaXZlPC9idXR0b24+XG4gICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0bic+U2l4PC9idXR0b24+XG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0bic+U2V2ZW48L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICdTZWxlY3RlZCBidXR0b25zJ1xuICAgICAgICAgIEBwID0+IEByYXcgJ0J1dHRvbnMgY2FuIGJlIG1hcmtlZCBzZWxlY3RlZCBieSBhZGRpbmcgYSA8Y29kZT4uc2VsZWN0ZWQ8L2NvZGU+IGNsYXNzLiBVc2VmdWwgZm9yIHRvZ2dsZSBncm91cHMuJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrJz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nYnRuLWdyb3VwJz5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4gc2VsZWN0ZWQnPk9uZTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0bic+VHdvPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuJz5UaHJlZTwvYnV0dG9uPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSdibG9jayc+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9J2J0bi1ncm91cCc+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuJz5PbmU8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4gc2VsZWN0ZWQnPlR3bzwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0bic+VGhyZWU8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2snPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdidG4tZ3JvdXAnPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0bic+T25lPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuJz5Ud288L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4gc2VsZWN0ZWQnPlRocmVlPC9idXR0b24+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrJz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nYnRuLWdyb3VwJz5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSdidG4gc2VsZWN0ZWQnPk9uZTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0biBzZWxlY3RlZCc+VHdvPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuJz5UaHJlZTwvYnV0dG9uPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgIEBleGFtcGxlU2VjdGlvbiAncGFuZWwnLCAnUGFuZWxzJywgLT5cbiAgICAgICAgICBAcCAnQSBjb250YWluZXIgYXR0YWNoZWQgdG8gc29tZSBzaWRlIG9mIHRoZSBBdG9tIFVJLidcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8YXRvbS1wYW5lbD5cbiAgICAgICAgICAgICAgU29tZSBjb250ZW50XG4gICAgICAgICAgICA8L2F0b20tcGFuZWw+XG4gICAgICAgICAgJycnXG5cbiAgICAgICAgICBAaDIgJ0luc2V0IFBhbmVsJ1xuICAgICAgICAgIEBwICdVc2UgaW5zaWRlIGEgcGFuZWwnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGF0b20tcGFuZWwgY2xhc3M9J3BhZGRlZCc+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbnNldC1wYW5lbCBwYWRkZWRcIj5Tb21lIGluc2V0IGNvbnRlbnQ8L2Rpdj5cbiAgICAgICAgICAgIDwvYXRvbS1wYW5lbD5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBoMiAnV2l0aCBhIGhlYWRpbmcnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGF0b20tcGFuZWwgY2xhc3M9J3BhZGRlZCc+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbnNldC1wYW5lbFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYW5lbC1oZWFkaW5nXCI+QW4gaW5zZXQtcGFuZWwgaGVhZGluZzwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYW5lbC1ib2R5IHBhZGRlZFwiPlNvbWUgQ29udGVudDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvYXRvbS1wYW5lbD5cbiAgICAgICAgICAnJydcblxuICAgICAgICBAZXhhbXBsZVNlY3Rpb24gJ2xpc3QtZ3JvdXAnLCAnTGlzdCBHcm91cCcsIC0+XG4gICAgICAgICAgQHAgJ1VzZSBmb3IgYW55dGhpbmcgdGhhdCByZXF1aXJlcyBhIGxpc3QuJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDx1bCBjbGFzcz0nbGlzdC1ncm91cCc+XG4gICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1pdGVtJz5Ob3JtYWwgaXRlbTwvbGk+XG4gICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1pdGVtIHNlbGVjdGVkJz5UaGlzIGlzIHRoZSBTZWxlY3RlZCBpdGVtPC9saT5cbiAgICAgICAgICAgICAgPGxpIGNsYXNzPSdsaXN0LWl0ZW0gdGV4dC1zdWJ0bGUnPlN1YnRsZTwvbGk+XG4gICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1pdGVtIHRleHQtaW5mbyc+SW5mbzwvbGk+XG4gICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1pdGVtIHRleHQtc3VjY2Vzcyc+U3VjY2VzczwvbGk+XG4gICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1pdGVtIHRleHQtd2FybmluZyc+V2FybmluZzwvbGk+XG4gICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1pdGVtIHRleHQtZXJyb3InPkVycm9yPC9saT5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgJycnXG5cbiAgICAgICAgICBAaDIgJ1dpdGggaWNvbnMnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPHVsIGNsYXNzPSdsaXN0LWdyb3VwJz5cbiAgICAgICAgICAgICAgPGxpIGNsYXNzPSdsaXN0LWl0ZW0nPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS1kaXJlY3RvcnknPlVzaW5nIGEgc3BhbiB3aXRoIGFuIGljb248L3NwYW4+XG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1pdGVtJz5cbiAgICAgICAgICAgICAgICA8aSBjbGFzcz0naWNvbiBpY29uLWZpbGUtZGlyZWN0b3J5Jz48L2k+XG4gICAgICAgICAgICAgICAgPHNwYW4+V2l0aCAuaWNvbi1maWxlLWRpcmVjdG9yeSB1c2luZyAmbHQ7aSZndDsgdGFnczwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPGxpIGNsYXNzPSdsaXN0LWl0ZW0gc2VsZWN0ZWQnPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS1kaXJlY3RvcnknPlNlbGVjdGVkIHdpdGggLmljb24tZmlsZS1kaXJlY3Rvcnk8L3NwYW4+XG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1pdGVtJz5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0nbm8taWNvbic+V2l0aCAubm8taWNvbjwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPGxpIGNsYXNzPSdsaXN0LWl0ZW0nPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS10ZXh0Jz5XaXRoIGljb24tZmlsZS10ZXh0PC9zcGFuPlxuICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICA8bGkgY2xhc3M9J2xpc3QtaXRlbSc+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLW1lZGlhJz5XaXRoIGljb24tZmlsZS1tZWRpYTwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPGxpIGNsYXNzPSdsaXN0LWl0ZW0nPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS1zeW1saW5rLWZpbGUnPldpdGggaWNvbi1maWxlLXN5bWxpbmstZmlsZTwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPGxpIGNsYXNzPSdsaXN0LWl0ZW0nPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS1zdWJtb2R1bGUnPldpdGggaWNvbi1maWxlLXN1Ym1vZHVsZTwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPGxpIGNsYXNzPSdsaXN0LWl0ZW0nPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tYm9vayc+V2l0aCBpY29uLWJvb2s8L3NwYW4+XG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgIEBleGFtcGxlU2VjdGlvbiAnbGlzdC10cmVlJywgJ0xpc3QgVHJlZScsIC0+XG4gICAgICAgICAgQHAgPT4gQHJhdyAnQSA8Y29kZT4ubGlzdC10cmVlPC9jb2RlPiBpcyBhIHNwZWNpYWwgY2FzZSBvZiA8Y29kZT4ubGlzdC1ncm91cDwvY29kZT4uJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDx1bCBjbGFzcz0nbGlzdC10cmVlJz5cbiAgICAgICAgICAgICAgPGxpIGNsYXNzPSdsaXN0LW5lc3RlZC1pdGVtJz5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdsaXN0LWl0ZW0nPlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLWRpcmVjdG9yeSc+QSBEaXJlY3Rvcnk8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9J2xpc3QtdHJlZSc+XG4gICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J2xpc3QtbmVzdGVkLWl0ZW0nPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdsaXN0LWl0ZW0nPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS1kaXJlY3RvcnknPk5lc3RlZCBEaXJlY3Rvcnk8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0nbGlzdC10cmVlJz5cbiAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J2xpc3QtaXRlbSc+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWZpbGUtdGV4dCc+RmlsZSBvbmU8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICAgIDwvbGk+XG5cbiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1uZXN0ZWQtaXRlbSBjb2xsYXBzZWQnPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdsaXN0LWl0ZW0nPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS1kaXJlY3RvcnknPkNvbGxhcHNlZCBOZXN0ZWQgRGlyZWN0b3J5PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9J2xpc3QtdHJlZSc+XG4gICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSdsaXN0LWl0ZW0nPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLXRleHQnPkZpbGUgb25lPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgICA8L2xpPlxuXG4gICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J2xpc3QtaXRlbSc+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS10ZXh0Jz5GaWxlIG9uZTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvbGk+XG5cbiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1pdGVtIHNlbGVjdGVkJz5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLXRleHQnPkZpbGUgdGhyZWUgLnNlbGVjdGVkITwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgPC9saT5cblxuICAgICAgICAgICAgICA8bGkgY2xhc3M9J2xpc3QtaXRlbSc+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLXRleHQnPi5pY29uLWZpbGUtdGV4dDwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9saT5cblxuICAgICAgICAgICAgICA8bGkgY2xhc3M9J2xpc3QtaXRlbSc+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLXN5bWxpbmstZmlsZSc+Lmljb24tZmlsZS1zeW1saW5rLWZpbGU8L3NwYW4+XG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgJycnXG5cbiAgICAgICAgICBAaDIgJ1dpdGggZGlzY2xvc3VyZSBhcnJvd3MnXG4gICAgICAgICAgQHAgPT4gQHJhdyAnQWRkIHRoZSBjbGFzcyA8Y29kZT4uaGFzLWNvbGxhcHNhYmxlLWNoaWxkcmVuPC9jb2RlPiB0byBnaXZlIHRoZSBjaGlsZHJlbiB3aXRoIG5lc3RlZCBpdGVtcyBkaXNjbG9zdXJlIGFycm93cy4nXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPHVsIGNsYXNzPSdsaXN0LXRyZWUgaGFzLWNvbGxhcHNhYmxlLWNoaWxkcmVuJz5cbiAgICAgICAgICAgICAgPGxpIGNsYXNzPSdsaXN0LW5lc3RlZC1pdGVtJz5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdsaXN0LWl0ZW0nPlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLWRpcmVjdG9yeSc+QSBEaXJlY3Rvcnk8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9J2xpc3QtdHJlZSc+XG4gICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J2xpc3QtbmVzdGVkLWl0ZW0nPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdsaXN0LWl0ZW0nPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS1kaXJlY3RvcnknPk5lc3RlZCBEaXJlY3Rvcnk8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0nbGlzdC10cmVlJz5cbiAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J2xpc3QtaXRlbSc+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWZpbGUtdGV4dCc+RmlsZSBvbmU8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICAgIDwvbGk+XG5cbiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1uZXN0ZWQtaXRlbSBjb2xsYXBzZWQnPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdsaXN0LWl0ZW0nPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS1kaXJlY3RvcnknPkNvbGxhcHNlZCBOZXN0ZWQgRGlyZWN0b3J5PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9J2xpc3QtdHJlZSc+XG4gICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSdsaXN0LWl0ZW0nPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLXRleHQnPkZpbGUgb25lPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgICA8L2xpPlxuXG4gICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J2xpc3QtaXRlbSc+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS10ZXh0Jz5GaWxlIG9uZTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvbGk+XG5cbiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1pdGVtIHNlbGVjdGVkJz5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLXRleHQnPkZpbGUgdGhyZWUgLnNlbGVjdGVkITwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgPC9saT5cblxuICAgICAgICAgICAgICA8bGkgY2xhc3M9J2xpc3QtaXRlbSc+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLXRleHQnPi5pY29uLWZpbGUtdGV4dDwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9saT5cblxuICAgICAgICAgICAgICA8bGkgY2xhc3M9J2xpc3QtaXRlbSc+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2ljb24gaWNvbi1maWxlLXN5bWxpbmstZmlsZSc+Lmljb24tZmlsZS1zeW1saW5rLWZpbGU8L3NwYW4+XG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICdXaXRoIGRpc2Nsb3N1cmUgYXJyb3dzIGF0IG9ubHkgb25lIGxldmVsLidcbiAgICAgICAgICBAcCA9PiBAcmF3ICdBZGQgdGhlIGNsYXNzIDxjb2RlPi5oYXMtZmxhdC1jaGlsZHJlbjwvY29kZT4gdG8gc3ViLTxjb2RlPi5saXN0LXRyZWU8L2NvZGU+cyB0byBpbmRpY2F0ZSB0aGF0IHRoZSBjaGlsZHJlbiB3aWxsIG5vdCBiZSBjb2xsYXBzYWJsZS4nXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPHVsIGNsYXNzPSdsaXN0LXRyZWUgaGFzLWNvbGxhcHNhYmxlLWNoaWxkcmVuICc+XG4gICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1uZXN0ZWQtaXRlbSc+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nbGlzdC1pdGVtJz5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS10ZXh0Jz5UaGlzIGlzIGEgY29sbGFwc2FibGUgc2VjdGlvbjwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0nbGlzdC10cmVlIGhhcy1mbGF0LWNoaWxkcmVuJz5cbiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1pdGVtJz5Tb21ldGhpbmcgaXMgaGVyZTwvbGk+XG4gICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J2xpc3QtaXRlbSBzZWxlY3RlZCc+U29tZXRoaW5nIHNlbGVjdGVkPC9saT5cbiAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICA8L2xpPlxuXG4gICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1uZXN0ZWQtaXRlbSc+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nbGlzdC1pdGVtJz5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS1kaXJlY3RvcnknPkFub3RoZXIgY29sbGFwc2FibGUgc2VjdGlvbjwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0nbGlzdC10cmVlIGhhcy1mbGF0LWNoaWxkcmVuJz5cbiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0nbGlzdC1pdGVtJz5Tb21ldGhpbmcgaXMgaGVyZTwvbGk+XG4gICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J2xpc3QtaXRlbSc+U29tZXRoaW5nIGVsc2U8L2xpPlxuICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgIEBleGFtcGxlU2VjdGlvbiAnc2VsZWN0LWxpc3QnLCAnU2VsZWN0IExpc3QnLCAtPlxuICAgICAgICAgIEBwID0+IEByYXcgJycnXG4gICAgICAgICAgICBZb3Ugd29udCBiZSBjcmVhdGluZyBhIDxjb2RlPi5zZWxlY3QtbGlzdDwvY29kZT4gZGlyZWN0bHksIGJ1dCB3aWxsIGRvIHNvXG4gICAgICAgICAgICBieSBleHRlbmRpbmcgdGhlIDxjb2RlPlNlbGVjdExpc3RWaWV3PC9jb2RlPiBjbGFzcy4gWW91clxuICAgICAgICAgICAgPGNvZGU+U2VsZWN0TGlzdFZpZXc8L2NvZGU+IHdpbGwgdXN1YWxseSBzcGVjaWZ5IG9ubHkgdGhlIGxpc3QgaXRlbXMsXG4gICAgICAgICAgICBhbmQgaGlkZS9zaG93IHRoZSBlcnJvcnMgb3IgbG9hZGluZyBtZXNzYWdlLlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQHAgPT4gQHJhdyAnVGhpcyBpcyBob3cgeW91IHdpbGwgdHlwaWNhbGx5IHNwZWNpZnkgYSA8Y29kZT4uc2VsZWN0LWxpc3Q8L2NvZGU+LidcbiAgICAgICAgICBAZXhhbXBsZU92ZXJsYXlTZWxlY3RMaXN0KClcblxuICAgICAgICAgIEBwID0+IEByYXcgJ1RoZSBsaXN0IGl0ZW1zIGhhdmUgbWFueSBvcHRpb25zIHlvdSBjYW4gdXNlLCBhbmQgc2hvd3MgeW91IGhvdyB0aGV5IHdpbGwgZGlzcGxheS4nXG5cbiAgICAgICAgICBAaDIgJ0Jhc2ljIGV4YW1wbGUgd2l0aCBvbmUgaXRlbSBzZWxlY3RlZCdcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8YXRvbS1wYW5lbCBjbGFzcz0nbW9kYWwnPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdzZWxlY3QtbGlzdCc+XG4gICAgICAgICAgICAgICAgPG9sIGNsYXNzPSdsaXN0LWdyb3VwJz5cbiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0nc2VsZWN0ZWQnPm9uZTwvbGk+XG4gICAgICAgICAgICAgICAgICA8bGk+dHdvPC9saT5cbiAgICAgICAgICAgICAgICAgIDxsaT50aHJlZTwvbGk+XG4gICAgICAgICAgICAgICAgPC9vbD5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2F0b20tcGFuZWw+XG4gICAgICAgICAgJycnXG5cbiAgICAgICAgICBAaDIgJ1NpbmdsZSBsaW5lIHdpdGggaWNvbnMnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGF0b20tcGFuZWwgY2xhc3M9J21vZGFsJz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nc2VsZWN0LWxpc3QnPlxuICAgICAgICAgICAgICAgIDxvbCBjbGFzcz0nbGlzdC1ncm91cCc+XG4gICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J3NlbGVjdGVkJz5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nc3RhdHVzIHN0YXR1cy1hZGRlZCBpY29uIGljb24tZGlmZi1hZGRlZCc+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9J2ljb24gaWNvbi1maWxlLXRleHQnPlNvbWUgZmlsZTwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9saT5cblxuICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdzdGF0dXMgc3RhdHVzLW1vZGlmaWVkIGljb24gaWNvbi1kaWZmLW1vZGlmaWVkJz48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0naWNvbiBpY29uLWZpbGUtdGV4dCc+QW5vdGhlciBmaWxlPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2xpPlxuXG4gICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9J3N0YXR1cyBzdGF0dXMtcmVtb3ZlZCBpY29uIGljb24tZGlmZi1yZW1vdmVkJz48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0naWNvbiBpY29uLWZpbGUtdGV4dCc+WWV0IGFub3RoZXIgZmlsZTwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8L29sPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvYXRvbS1wYW5lbD5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBoMiAnU2luZ2xlIGxpbmUgd2l0aCBrZXktYmluZGluZ3MnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGF0b20tcGFuZWwgY2xhc3M9J21vZGFsJz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nc2VsZWN0LWxpc3QnPlxuICAgICAgICAgICAgICAgIDxvbCBjbGFzcz0nbGlzdC1ncm91cCc+XG4gICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J3NlbGVjdGVkJz5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ncHVsbC1yaWdodCc+XG4gICAgICAgICAgICAgICAgICAgICAgPGtiZCBjbGFzcz0na2V5LWJpbmRpbmcgcHVsbC1yaWdodCc+4oyY4oyl4oaTPC9rYmQ+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS10ZXh0Jz5Tb21lIGZpbGU8L3NwYW4+XG4gICAgICAgICAgICAgICAgICA8L2xpPlxuXG4gICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9J3B1bGwtcmlnaHQga2V5LWJpbmRpbmdzJz5cbiAgICAgICAgICAgICAgICAgICAgICA8a2JkIGNsYXNzPSdrZXktYmluZGluZyc+4oyY4oylQTwva2JkPlxuICAgICAgICAgICAgICAgICAgICAgIDxrYmQgY2xhc3M9J2tleS1iaW5kaW5nJz7ijJjijKVPPC9rYmQ+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpY29uIGljb24tZmlsZS10ZXh0Jz5Bbm90aGVyIGZpbGUgd2l0aCBhIGxvbmcgbmFtZTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvbGk+XG5cbiAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ncHVsbC1yaWdodCc+XG4gICAgICAgICAgICAgICAgICAgICAgPGtiZCBjbGFzcz0na2V5LWJpbmRpbmcnPuKMmOKMpeKGkzwva2JkPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0naWNvbiBpY29uLWZpbGUtdGV4dCc+WWV0IGFub3RoZXIgZmlsZTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPC9vbD5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2F0b20tcGFuZWw+XG4gICAgICAgICAgJycnXG5cbiAgICAgICAgICBAaDIgJ011bHRpcGxlIGxpbmVzIHdpdGggbm8gaWNvbnMnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGF0b20tcGFuZWwgY2xhc3M9J21vZGFsJz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nc2VsZWN0LWxpc3QnPlxuICAgICAgICAgICAgICAgIDxvbCBjbGFzcz0nbGlzdC1ncm91cCc+XG4gICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J3R3by1saW5lcyc+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9J3ByaW1hcnktbGluZSc+UHJpbWFyeSBsaW5lPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9J3NlY29uZGFyeS1saW5lJz5TZWNvbmRhcnkgbGluZTwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9saT5cblxuICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSd0d28tbGluZXMgc2VsZWN0ZWQnPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdwcmltYXJ5LWxpbmUnPkEgdGhpbmc8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nc2Vjb25kYXJ5LWxpbmUnPkRlc2NyaXB0aW9uIG9mIHRoZSB0aGluZzwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8L29sPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvYXRvbS1wYW5lbD5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBoMiAnTXVsdGlwbGUgbGluZXMgd2l0aCBpY29ucydcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8YXRvbS1wYW5lbCBjbGFzcz0nbW9kYWwnPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdzZWxlY3QtbGlzdCc+XG4gICAgICAgICAgICAgICAgPG9sIGNsYXNzPSdsaXN0LWdyb3VwJz5cbiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ndHdvLWxpbmVzJz5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nc3RhdHVzIHN0YXR1cy1hZGRlZCBpY29uIGljb24tZGlmZi1hZGRlZCc+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9J3ByaW1hcnktbGluZSBpY29uIGljb24tZmlsZS10ZXh0Jz5QcmltYXJ5IGxpbmU8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nc2Vjb25kYXJ5LWxpbmUgbm8taWNvbic+U2Vjb25kYXJ5IGxpbmU8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvbGk+XG5cbiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ndHdvLWxpbmVzIHNlbGVjdGVkJz5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nc3RhdHVzIHN0YXR1cy1tb2RpZmllZCBpY29uIGljb24tZGlmZi1tb2RpZmllZCc+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9J3ByaW1hcnktbGluZSBpY29uIGljb24tZmlsZS1zeW1saW5rLWZpbGUnPkEgdGhpbmc8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nc2Vjb25kYXJ5LWxpbmUgbm8taWNvbic+RGVzY3JpcHRpb24gb2YgdGhlIHRoaW5nPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2xpPlxuXG4gICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J3R3by1saW5lcyc+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9J3N0YXR1cyBzdGF0dXMtcmVuYW1lZCBpY29uIGljb24tZGlmZi1yZW5hbWVkJz48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ncHJpbWFyeS1saW5lIGljb24gaWNvbi1maWxlLXN5bWxpbmstZmlsZSc+QSB0aGluZzwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdzZWNvbmRhcnktbGluZSBuby1pY29uJz5EZXNjcmlwdGlvbiBvZiB0aGUgdGhpbmc8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPC9vbD5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2F0b20tcGFuZWw+XG4gICAgICAgICAgJycnXG5cbiAgICAgICAgICBAaDIgJ1VzaW5nIG1hcmstYWN0aXZlIGNsYXNzIHRvIGluZGljYXRlIHRoZSBhY3RpdmUgaXRlbSdcbiAgICAgICAgICBAcCA9PiBAcmF3ICdVc2UgLi4uJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxhdG9tLXBhbmVsIGNsYXNzPSdtb2RhbCc+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9J3NlbGVjdC1saXN0Jz5cbiAgICAgICAgICAgICAgICA8b2wgY2xhc3M9J2xpc3QtZ3JvdXAgbWFyay1hY3RpdmUnPlxuICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSdzZWxlY3RlZCc+U2VsZWN0ZWQgJm1kYXNoOyB1c2VyIGlzIGFycm93aW5nIHRocm91Z2ggdGhlIGxpc3QuPC9saT5cbiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0nYWN0aXZlJz5UaGlzIGlzIHRoZSBhY3RpdmUgaXRlbTwvbGk+XG4gICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J3NlbGVjdGVkIGFjdGl2ZSc+U2VsZWN0ZWQgQU5EIEFjdGl2ZSE8L2xpPlxuICAgICAgICAgICAgICAgIDwvb2w+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9hdG9tLXBhbmVsPlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICdFcnJvciBtZXNzYWdlcydcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8YXRvbS1wYW5lbCBjbGFzcz0nbW9kYWwnPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdzZWxlY3QtbGlzdCc+XG4gICAgICAgICAgICAgICAgPGF0b20tdGV4dC1lZGl0b3IgbWluaT5JIHNlYXJjaGVkIGZvciB0aGlzPC9hdG9tLXRleHQtZWRpdG9yPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Vycm9yLW1lc3NhZ2UnPk5vdGhpbmcgaGFzIGJlZW4gZm91bmQhPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9hdG9tLXBhbmVsPlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGgyICdMb2FkaW5nIG1lc3NhZ2UnXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGF0b20tcGFuZWwgY2xhc3M9J21vZGFsJz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nc2VsZWN0LWxpc3QnPlxuICAgICAgICAgICAgICAgIDxhdG9tLXRleHQtZWRpdG9yIG1pbmk+VXNlciBpbnB1dDwvYXRvbS10ZXh0LWVkaXRvcj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSdsb2FkaW5nJz5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdsb2FkaW5nLW1lc3NhZ2UnPkNoaWxsLCBicm8uIFRoaW5ncyBhcmUgbG9hZGluZy48L3NwYW4+XG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0nYmFkZ2UnPjEyMzQ8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9hdG9tLXBhbmVsPlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgIEBleGFtcGxlU2VjdGlvbiAncG9wb3Zlci1saXN0JywgJ1BvcG92ZXIgTGlzdCcsIC0+XG4gICAgICAgICAgQHAgPT4gQHJhdyAnJydcbiAgICAgICAgICAgIEEgPGNvZGU+LnBvcG92ZXItbGlzdDwvY29kZT4gaXMgYSA8Y29kZT4uc2VsZWN0LWxpc3Q8L2NvZGU+IHRoYXRcbiAgICAgICAgICAgIGlzIG1lYW50IHRvIHBvcG92ZXIgdGhlIGNvZGUgZm9yIHNvbWV0aGluZyBsaWtlIGF1dG9jb21wbGV0ZS5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBoMiAnQmFzaWMgZXhhbXBsZSB3aXRoIG9uZSBpdGVtIHNlbGVjdGVkJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J3NlbGVjdC1saXN0IHBvcG92ZXItbGlzdCc+XG4gICAgICAgICAgICAgIDxhdG9tLXRleHQtZWRpdG9yIG1pbmk+J1VzZXIgdHlwZXMgaGVyZS4uJzwvYXRvbS10ZXh0LWVkaXRvcj5cbiAgICAgICAgICAgICAgPG9sIGNsYXNzPSdsaXN0LWdyb3VwJz5cbiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9J3NlbGVjdGVkJz5vbmU8L2xpPlxuICAgICAgICAgICAgICAgIDxsaT50d288L2xpPlxuICAgICAgICAgICAgICAgIDxsaT50aHJlZTwvbGk+XG4gICAgICAgICAgICAgIDwvb2w+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAnJydcblxuICAgICAgICBAZXhhbXBsZVNlY3Rpb24gJ21vZGFsLXBhbmVsJywgJ01vZGFscycsIC0+XG4gICAgICAgICAgQHAgPT4gQHJhdyAnTW9kYWxzIGFyZSBsaWtlIGRpYWxvZyBib3hlcy4nXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPGF0b20tcGFuZWwgY2xhc3M9J21vZGFsJz5cbiAgICAgICAgICAgICAgPGRpdj5Tb21lIGNvbnRlbnQ8L2Rpdj5cbiAgICAgICAgICAgIDwvYXRvbS1wYW5lbD5cbiAgICAgICAgICAnJydcblxuICAgICAgICBAZXhhbXBsZVNlY3Rpb24gJ3Rvb2x0aXBzJywgJ1Rvb2x0aXBzJywgLT5cbiAgICAgICAgICBAcCA9PiBAcmF3ICcnJ1xuICAgICAgICAgICAgWW91IGRvIG5vdCBjcmVhdGUgdGhlIG1hcmt1cCBkaXJlY3RseS4gWW91IGNhbGxcbiAgICAgICAgICAgIDxjb2RlPmVsZW1lbnQuc2V0VG9vbHRpcCh0aXRsZSwge2NvbW1hbmQsIGNvbW1hbmRFbGVtZW50fT17fSk8L2NvZGU+LlxuICAgICAgICAgICAgUGFzc2luZyBpbiBhIDxjb2RlPmNvbW1hbmQ8L2NvZGU+IChsaWtlIDxjb2RlPmZpbmQtYW5kLXJlcGxhY2U6c2hvdy1maW5kPC9jb2RlPikgYW5kXG4gICAgICAgICAgICA8Y29kZT5jb21tYW5kRWxlbWVudDwvY29kZT4gKGNvbnRleHQgZm9yIHRoZSBjb21tYW5kKSB3aWxsIHlpZWxkIGEgdGlwIHdpdGggYSBrZXlzdHJva2UuXG4gICAgICAgICAgJycnXG5cbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSd0b29sdGlwIHRvcCc+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9J3Rvb2x0aXAtYXJyb3cnPjwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSd0b29sdGlwLWlubmVyJz5UaGlzIGlzIGEgbWVzc2FnZTwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J3Rvb2x0aXAgdG9wJz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ndG9vbHRpcC1hcnJvdyc+PC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9J3Rvb2x0aXAtaW5uZXInPlxuICAgICAgICAgICAgICAgIFdpdGggYSBrZXlzdHJva2UgPHNwYW4gY2xhc3M9XCJrZXlzdHJva2VcIj5jbWQtc2hpZnQtbzwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAnJydcblxuICAgICAgICBAZXhhbXBsZVNlY3Rpb24gJ2Vycm9yLW1lc3NhZ2VzJywgJ01lc3NhZ2VzJywgLT5cbiAgICAgICAgICBAcCA9PiBAcmF3ICcnJ1xuICAgICAgICAgICAgVXNlIHRvIGNvbnZleSBpbmZvIHRvIHRoZSB1c2VyIHdoZW4gc29tZXRoaW5nIGhhcHBlbnMuIFNlZSA8Y29kZT5maW5kLWFuZC1yZXBsYWNlPC9jb2RlPlxuICAgICAgICAgICAgZm9yIGFuIGV4YW1wbGUuXG4gICAgICAgICAgJycnXG5cbiAgICAgICAgICBAaDIgJ0Vycm9yIG1lc3NhZ2VzJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDx1bCBjbGFzcz0nZXJyb3ItbWVzc2FnZXMgYmxvY2snPlxuICAgICAgICAgICAgICA8bGk+VGhpcyBpcyBhbiBlcnJvciE8L2xpPlxuICAgICAgICAgICAgICA8bGk+QW5kIGFub3RoZXI8L2xpPlxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBoMiAnSW5mbyBtZXNzYWdlcydcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8dWwgY2xhc3M9J2luZm8tbWVzc2FnZXMgYmxvY2snPlxuICAgICAgICAgICAgICA8bGk+SW5mbyBsaW5lPC9saT5cbiAgICAgICAgICAgICAgPGxpPkFub3RoZXIgaW5mbyBsaW5lPC9saT5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgJycnXG5cbiAgICAgICAgICBAaDIgJ0JhY2tncm91bmQgTWVzc2FnZXMnXG4gICAgICAgICAgQHAgPT4gQHJhdyAnJydcbiAgICAgICAgICAgIFN1YnRsZSBiYWNrZ3JvdW5kIG1lc3NhZ2VzIGZvciBwYW5lcy4gVXNlIGZvciBjYXNlcyB3aGVuIHRoZXJlIGFyZSBubyByZXN1bHRzLlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPHVsIGNsYXNzPSdiYWNrZ3JvdW5kLW1lc3NhZ2UnPlxuICAgICAgICAgICAgICA8bGk+Tm8gUmVzdWx0czwvbGk+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQHAgPT4gQHJhdyAnJydcbiAgICAgICAgICAgIENlbnRlcmVkIGJhY2tncm91bmQgbWVzc2FnZXMgd2lsbCBjZW50ZXIgaG9yaXpvbnRhbGx5IGFuZCB2ZXJ0aWNhbGx5LlxuICAgICAgICAgICAgWW91ciBjb250YWluZXIgZm9yIHRoaXMgZWxlbWVudCBtdXN0IGhhdmUgPGNvZGU+cG9zaXRpb248L2NvZGU+IHNldCB3aXRoIDxjb2RlPnJlbGF0aXZlPC9jb2RlPiBvclxuICAgICAgICAgICAgPGNvZGU+YWJzb2x1dGU8L2NvZGU+LlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgICAgQGV4YW1wbGVIdG1sICcnJ1xuICAgICAgICAgICAgPHVsIGNsYXNzPSdiYWNrZ3JvdW5kLW1lc3NhZ2UgY2VudGVyZWQnPlxuICAgICAgICAgICAgICA8bGk+Tm8gUmVzdWx0czwvbGk+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICcnJ1xuXG4gICAgICAgIEBleGFtcGxlU2VjdGlvbiAncHJvZ3Jlc3MnLCAnTG9hZGluZy9Qcm9ncmVzcycsIC0+XG4gICAgICAgICAgQGgyICdQcm9ncmVzcyBCYXJzJ1xuICAgICAgICAgIEBleGFtcGxlSHRtbCAnJydcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrJz5cbiAgICAgICAgICAgICAgPHByb2dyZXNzIGNsYXNzPSdpbmxpbmUtYmxvY2snPjwvcHJvZ3Jlc3M+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpbmxpbmUtYmxvY2snPkluZGV0ZXJtaW5hdGU8L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2snPlxuICAgICAgICAgICAgICA8cHJvZ3Jlc3MgY2xhc3M9J2lubGluZS1ibG9jaycgbWF4PScxMDAnIHZhbHVlPScyNSc+PC9wcm9ncmVzcz5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2lubGluZS1ibG9jayc+QXQgMjUlPC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9J2Jsb2NrJz5cbiAgICAgICAgICAgICAgPHByb2dyZXNzIGNsYXNzPSdpbmxpbmUtYmxvY2snIG1heD0nMTAwJyB2YWx1ZT0nNTAnPjwvcHJvZ3Jlc3M+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpbmxpbmUtYmxvY2snPkF0IDUwJTwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPSdibG9jayc+XG4gICAgICAgICAgICAgIDxwcm9ncmVzcyBjbGFzcz0naW5saW5lLWJsb2NrJyBtYXg9JzEwMCcgdmFsdWU9Jzc1Jz48L3Byb2dyZXNzPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0naW5saW5lLWJsb2NrJz5BdCA3NSU8L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzcz0nYmxvY2snPlxuICAgICAgICAgICAgICA8cHJvZ3Jlc3MgY2xhc3M9J2lubGluZS1ibG9jaycgbWF4PScxMDAnIHZhbHVlPScxMDAnPjwvcHJvZ3Jlc3M+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdpbmxpbmUtYmxvY2snPkF0IDEwMCU8L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAnJydcblxuICAgICAgICAgIEBoMiAnTG9hZGluZyBTcGlubmVycydcbiAgICAgICAgICBAZXhhbXBsZUh0bWwgJycnXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0nbG9hZGluZyBsb2FkaW5nLXNwaW5uZXItdGlueSBpbmxpbmUtYmxvY2snPjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdsb2FkaW5nIGxvYWRpbmctc3Bpbm5lci1zbWFsbCBpbmxpbmUtYmxvY2snPjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdsb2FkaW5nIGxvYWRpbmctc3Bpbm5lci1tZWRpdW0gaW5saW5lLWJsb2NrJz48L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0nbG9hZGluZyBsb2FkaW5nLXNwaW5uZXItbGFyZ2UgaW5saW5lLWJsb2NrJz48L3NwYW4+XG4gICAgICAgICAgJycnXG5cbiAgQGRlc2VyaWFsaXplOiAob3B0aW9ucz17fSkgLT5cbiAgICBuZXcgU3R5bGVndWlkZVZpZXcob3B0aW9ucylcblxuICAjIHNlY3Rpb25zIGFyZSBsYXp5bG9hZGVkIGZvciBzcGVlZHVwIHdoZW4gcmVsb2FkaW5nIHRoZSBhcHAuIEkgb2Z0ZW4gYW1cbiAgIyBlZGl0aW5nIGp1c3Qgb25lIHNlY3Rpb24sIGFuZCBkb250IG5lZWQgdG8gbG9hZCB0aGUgcmVzdC4gV2hlbiB0aGUgdXNlclxuICAjIGNsaWNrcyB0byBleHBhbmQgYSBzZWN0aW9uLCBpdCB3aWxsIGxvYWQgc2FpZCBzZWN0aW9uLlxuICBAZXhhbXBsZVNlY3Rpb25zOiB7fVxuICBAZXhhbXBsZVNlY3Rpb246IChuYW1lLCB0aXRsZSwgYnVpbGRGbikgLT5cbiAgICBAZXhhbXBsZVNlY3Rpb25zW25hbWVdID0gRXhhbXBsZVNlY3Rpb24uYnVpbGQodGhpcywgbmFtZSwgdGl0bGUsIGJ1aWxkRm4pXG5cbiAgaW5pdGlhbGl6ZTogKHtAdXJpLCBjb2xsYXBzZWRTZWN0aW9uc309e30pIC0+XG4gICAgQG9uICdjbGljaycsICcuc2VjdGlvbi1oZWFkaW5nJywgLT5cbiAgICAgIFN0eWxlZ3VpZGVWaWV3LmV4YW1wbGVTZWN0aW9uc1skKHRoaXMpLnBhcmVudCgpLmF0dHIoJ2RhdGEtbmFtZScpXS50b2dnbGUoKVxuXG4gICAgQG9uICdjbGljaycsICcuZXhhbXBsZS1jb2RlIC5idG4tZ3JvdXAgLmJ0bicsIC0+XG4gICAgICBidG4gPSAkKHRoaXMpXG4gICAgICBleGFtcGxlID0gYnRuLnBhcmVudHMoJy5leGFtcGxlLWNvZGUnKVxuICAgICAgY2xhcyA9IGJ0bi5hdHRyKCdkYXRhLWRpc3BsYXktY2xhc3MnKVxuXG4gICAgICBleGFtcGxlLmZpbmQoJy5idG4nKS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKVxuICAgICAgZXhhbXBsZS5yZW1vdmVDbGFzcygnc2hvdy1leGFtcGxlLWh0bWwgc2hvdy1leGFtcGxlLXNwYWNlLXBlbicpXG4gICAgICBleGFtcGxlLmFkZENsYXNzKGNsYXMpXG5cbiAgICAgIGJ0bi5hZGRDbGFzcygnc2VsZWN0ZWQnKVxuXG4gICAgQGNvbGxhcHNlQWxsQnV0dG9uLmNsaWNrKEBjb2xsYXBzZUFsbFNlY3Rpb25zKVxuICAgIEBleHBhbmRBbGxCdXR0b24uY2xpY2soQGV4cGFuZEFsbFNlY3Rpb25zKVxuXG4gICAgQHN0eWxlZ3VpZGVTZWN0aW9ucy5hcHBlbmQoc2VjdGlvbi5lbCkgZm9yIF9fLCBzZWN0aW9uIG9mIFN0eWxlZ3VpZGVWaWV3LmV4YW1wbGVTZWN0aW9uc1xuICAgIEBzZXRDb2xsYXBzZWRTZWN0aW9ucyhjb2xsYXBzZWRTZWN0aW9ucylcblxuICBzZXJpYWxpemU6IC0+XG4gICAgZGVzZXJpYWxpemVyOiBAY29uc3RydWN0b3IubmFtZVxuICAgIGNvbGxhcHNlZFNlY3Rpb25zOiBAZ2V0Q29sbGFwc2VkU2VjdGlvbnMoKVxuICAgIHVyaTogQGdldFVSSSgpXG5cbiAgZ2V0VVJJOiAtPiBAdXJpXG5cbiAgZ2V0VGl0bGU6IC0+IFwiU3R5bGVndWlkZVwiXG5cbiAgb25EaWRDaGFuZ2VUaXRsZTogLT4gbmV3IERpc3Bvc2FibGUgLT5cbiAgb25EaWRDaGFuZ2VNb2RpZmllZDogLT4gbmV3IERpc3Bvc2FibGUgLT5cblxuICBjb2xsYXBzZUFsbFNlY3Rpb25zOiAtPlxuICAgIGZvciBuYW1lLCBzZWN0aW9uIG9mIFN0eWxlZ3VpZGVWaWV3LmV4YW1wbGVTZWN0aW9uc1xuICAgICAgY29udGludWUgaWYgbmFtZSBpcyAnc3R5bGVndWlkZSdcbiAgICAgIHNlY3Rpb24uY29sbGFwc2UoKVxuXG4gIGV4cGFuZEFsbFNlY3Rpb25zOiAtPlxuICAgIGZvciBuYW1lLCBzZWN0aW9uIG9mIFN0eWxlZ3VpZGVWaWV3LmV4YW1wbGVTZWN0aW9uc1xuICAgICAgY29udGludWUgaWYgbmFtZSBpcyAnc3R5bGVndWlkZSdcbiAgICAgIHNlY3Rpb24uZXhwYW5kKClcblxuICBnZXRDb2xsYXBzZWRTZWN0aW9uczogLT5cbiAgICAkKHNlYykuYXR0cignZGF0YS1uYW1lJykgZm9yIHNlYyBpbiBAZmluZCgnc2VjdGlvbi5jb2xsYXBzZWQnKVxuXG4gIHNldENvbGxhcHNlZFNlY3Rpb25zOiAoY29sbGFwc2VkU2VjdGlvbnM9W10pIC0+XG4gICAgZm9yIG5hbWUsIHNlY3Rpb24gb2YgU3R5bGVndWlkZVZpZXcuZXhhbXBsZVNlY3Rpb25zXG4gICAgICBzZWN0aW9uLmV4cGFuZCgpIGlmIG5hbWUgbm90IGluIGNvbGxhcHNlZFNlY3Rpb25zXG4gICAgbnVsbFxuXG4gIGlzRXF1YWw6IChvdGhlcikgLT5cbiAgICBvdGhlciBpbnN0YW5jZW9mIFN0eWxlZ3VpZGVWaWV3XG4iXX0=
